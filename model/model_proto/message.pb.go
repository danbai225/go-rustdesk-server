// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.21.11
// source: model/protos/message.proto

package model_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ControlKey int32

const (
	ControlKey_Unknown   ControlKey = 0
	ControlKey_Alt       ControlKey = 1
	ControlKey_Backspace ControlKey = 2
	ControlKey_CapsLock  ControlKey = 3
	ControlKey_Control   ControlKey = 4
	ControlKey_Delete    ControlKey = 5
	ControlKey_DownArrow ControlKey = 6
	ControlKey_End       ControlKey = 7
	ControlKey_Escape    ControlKey = 8
	ControlKey_F1        ControlKey = 9
	ControlKey_F10       ControlKey = 10
	ControlKey_F11       ControlKey = 11
	ControlKey_F12       ControlKey = 12
	ControlKey_F2        ControlKey = 13
	ControlKey_F3        ControlKey = 14
	ControlKey_F4        ControlKey = 15
	ControlKey_F5        ControlKey = 16
	ControlKey_F6        ControlKey = 17
	ControlKey_F7        ControlKey = 18
	ControlKey_F8        ControlKey = 19
	ControlKey_F9        ControlKey = 20
	ControlKey_Home      ControlKey = 21
	ControlKey_LeftArrow ControlKey = 22
	// / meta key (also known as "windows"; "super"; and "command")
	ControlKey_Meta ControlKey = 23
	// / option key on macOS (alt key on Linux and Windows)
	ControlKey_Option      ControlKey = 24 // deprecated, use Alt instead
	ControlKey_PageDown    ControlKey = 25
	ControlKey_PageUp      ControlKey = 26
	ControlKey_Return      ControlKey = 27
	ControlKey_RightArrow  ControlKey = 28
	ControlKey_Shift       ControlKey = 29
	ControlKey_Space       ControlKey = 30
	ControlKey_Tab         ControlKey = 31
	ControlKey_UpArrow     ControlKey = 32
	ControlKey_Numpad0     ControlKey = 33
	ControlKey_Numpad1     ControlKey = 34
	ControlKey_Numpad2     ControlKey = 35
	ControlKey_Numpad3     ControlKey = 36
	ControlKey_Numpad4     ControlKey = 37
	ControlKey_Numpad5     ControlKey = 38
	ControlKey_Numpad6     ControlKey = 39
	ControlKey_Numpad7     ControlKey = 40
	ControlKey_Numpad8     ControlKey = 41
	ControlKey_Numpad9     ControlKey = 42
	ControlKey_Cancel      ControlKey = 43
	ControlKey_Clear       ControlKey = 44
	ControlKey_Menu        ControlKey = 45 // deprecated, use Alt instead
	ControlKey_Pause       ControlKey = 46
	ControlKey_Kana        ControlKey = 47
	ControlKey_Hangul      ControlKey = 48
	ControlKey_Junja       ControlKey = 49
	ControlKey_Final       ControlKey = 50
	ControlKey_Hanja       ControlKey = 51
	ControlKey_Kanji       ControlKey = 52
	ControlKey_Convert     ControlKey = 53
	ControlKey_Select      ControlKey = 54
	ControlKey_Print       ControlKey = 55
	ControlKey_Execute     ControlKey = 56
	ControlKey_Snapshot    ControlKey = 57
	ControlKey_Insert      ControlKey = 58
	ControlKey_Help        ControlKey = 59
	ControlKey_Sleep       ControlKey = 60
	ControlKey_Separator   ControlKey = 61
	ControlKey_Scroll      ControlKey = 62
	ControlKey_NumLock     ControlKey = 63
	ControlKey_RWin        ControlKey = 64
	ControlKey_Apps        ControlKey = 65
	ControlKey_Multiply    ControlKey = 66
	ControlKey_Add         ControlKey = 67
	ControlKey_Subtract    ControlKey = 68
	ControlKey_Decimal     ControlKey = 69
	ControlKey_Divide      ControlKey = 70
	ControlKey_Equals      ControlKey = 71
	ControlKey_NumpadEnter ControlKey = 72
	ControlKey_RShift      ControlKey = 73
	ControlKey_RControl    ControlKey = 74
	ControlKey_RAlt        ControlKey = 75
	ControlKey_CtrlAltDel  ControlKey = 100
	ControlKey_LockScreen  ControlKey = 101
)

// Enum value maps for ControlKey.
var (
	ControlKey_name = map[int32]string{
		0:   "Unknown",
		1:   "Alt",
		2:   "Backspace",
		3:   "CapsLock",
		4:   "Control",
		5:   "Delete",
		6:   "DownArrow",
		7:   "End",
		8:   "Escape",
		9:   "F1",
		10:  "F10",
		11:  "F11",
		12:  "F12",
		13:  "F2",
		14:  "F3",
		15:  "F4",
		16:  "F5",
		17:  "F6",
		18:  "F7",
		19:  "F8",
		20:  "F9",
		21:  "Home",
		22:  "LeftArrow",
		23:  "Meta",
		24:  "Option",
		25:  "PageDown",
		26:  "PageUp",
		27:  "Return",
		28:  "RightArrow",
		29:  "Shift",
		30:  "Space",
		31:  "Tab",
		32:  "UpArrow",
		33:  "Numpad0",
		34:  "Numpad1",
		35:  "Numpad2",
		36:  "Numpad3",
		37:  "Numpad4",
		38:  "Numpad5",
		39:  "Numpad6",
		40:  "Numpad7",
		41:  "Numpad8",
		42:  "Numpad9",
		43:  "Cancel",
		44:  "Clear",
		45:  "Menu",
		46:  "Pause",
		47:  "Kana",
		48:  "Hangul",
		49:  "Junja",
		50:  "Final",
		51:  "Hanja",
		52:  "Kanji",
		53:  "Convert",
		54:  "Select",
		55:  "Print",
		56:  "Execute",
		57:  "Snapshot",
		58:  "Insert",
		59:  "Help",
		60:  "Sleep",
		61:  "Separator",
		62:  "Scroll",
		63:  "NumLock",
		64:  "RWin",
		65:  "Apps",
		66:  "Multiply",
		67:  "Add",
		68:  "Subtract",
		69:  "Decimal",
		70:  "Divide",
		71:  "Equals",
		72:  "NumpadEnter",
		73:  "RShift",
		74:  "RControl",
		75:  "RAlt",
		100: "CtrlAltDel",
		101: "LockScreen",
	}
	ControlKey_value = map[string]int32{
		"Unknown":     0,
		"Alt":         1,
		"Backspace":   2,
		"CapsLock":    3,
		"Control":     4,
		"Delete":      5,
		"DownArrow":   6,
		"End":         7,
		"Escape":      8,
		"F1":          9,
		"F10":         10,
		"F11":         11,
		"F12":         12,
		"F2":          13,
		"F3":          14,
		"F4":          15,
		"F5":          16,
		"F6":          17,
		"F7":          18,
		"F8":          19,
		"F9":          20,
		"Home":        21,
		"LeftArrow":   22,
		"Meta":        23,
		"Option":      24,
		"PageDown":    25,
		"PageUp":      26,
		"Return":      27,
		"RightArrow":  28,
		"Shift":       29,
		"Space":       30,
		"Tab":         31,
		"UpArrow":     32,
		"Numpad0":     33,
		"Numpad1":     34,
		"Numpad2":     35,
		"Numpad3":     36,
		"Numpad4":     37,
		"Numpad5":     38,
		"Numpad6":     39,
		"Numpad7":     40,
		"Numpad8":     41,
		"Numpad9":     42,
		"Cancel":      43,
		"Clear":       44,
		"Menu":        45,
		"Pause":       46,
		"Kana":        47,
		"Hangul":      48,
		"Junja":       49,
		"Final":       50,
		"Hanja":       51,
		"Kanji":       52,
		"Convert":     53,
		"Select":      54,
		"Print":       55,
		"Execute":     56,
		"Snapshot":    57,
		"Insert":      58,
		"Help":        59,
		"Sleep":       60,
		"Separator":   61,
		"Scroll":      62,
		"NumLock":     63,
		"RWin":        64,
		"Apps":        65,
		"Multiply":    66,
		"Add":         67,
		"Subtract":    68,
		"Decimal":     69,
		"Divide":      70,
		"Equals":      71,
		"NumpadEnter": 72,
		"RShift":      73,
		"RControl":    74,
		"RAlt":        75,
		"CtrlAltDel":  100,
		"LockScreen":  101,
	}
)

func (x ControlKey) Enum() *ControlKey {
	p := new(ControlKey)
	*p = x
	return p
}

func (x ControlKey) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ControlKey) Descriptor() protoreflect.EnumDescriptor {
	return file_model_protos_message_proto_enumTypes[0].Descriptor()
}

func (ControlKey) Type() protoreflect.EnumType {
	return &file_model_protos_message_proto_enumTypes[0]
}

func (x ControlKey) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ControlKey.Descriptor instead.
func (ControlKey) EnumDescriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{0}
}

type FileType int32

const (
	FileType_Dir      FileType = 0
	FileType_DirLink  FileType = 2
	FileType_DirDrive FileType = 3
	FileType_File     FileType = 4
	FileType_FileLink FileType = 5
)

// Enum value maps for FileType.
var (
	FileType_name = map[int32]string{
		0: "Dir",
		2: "DirLink",
		3: "DirDrive",
		4: "File",
		5: "FileLink",
	}
	FileType_value = map[string]int32{
		"Dir":      0,
		"DirLink":  2,
		"DirDrive": 3,
		"File":     4,
		"FileLink": 5,
	}
)

func (x FileType) Enum() *FileType {
	p := new(FileType)
	*p = x
	return p
}

func (x FileType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (FileType) Descriptor() protoreflect.EnumDescriptor {
	return file_model_protos_message_proto_enumTypes[1].Descriptor()
}

func (FileType) Type() protoreflect.EnumType {
	return &file_model_protos_message_proto_enumTypes[1]
}

func (x FileType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use FileType.Descriptor instead.
func (FileType) EnumDescriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{1}
}

type ImageQuality int32

const (
	ImageQuality_NotSet   ImageQuality = 0
	ImageQuality_Low      ImageQuality = 2
	ImageQuality_Balanced ImageQuality = 3
	ImageQuality_Best     ImageQuality = 4
)

// Enum value maps for ImageQuality.
var (
	ImageQuality_name = map[int32]string{
		0: "NotSet",
		2: "Low",
		3: "Balanced",
		4: "Best",
	}
	ImageQuality_value = map[string]int32{
		"NotSet":   0,
		"Low":      2,
		"Balanced": 3,
		"Best":     4,
	}
)

func (x ImageQuality) Enum() *ImageQuality {
	p := new(ImageQuality)
	*p = x
	return p
}

func (x ImageQuality) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ImageQuality) Descriptor() protoreflect.EnumDescriptor {
	return file_model_protos_message_proto_enumTypes[2].Descriptor()
}

func (ImageQuality) Type() protoreflect.EnumType {
	return &file_model_protos_message_proto_enumTypes[2]
}

func (x ImageQuality) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ImageQuality.Descriptor instead.
func (ImageQuality) EnumDescriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{2}
}

type PermissionInfo_Permission int32

const (
	PermissionInfo_Keyboard  PermissionInfo_Permission = 0
	PermissionInfo_Clipboard PermissionInfo_Permission = 2
	PermissionInfo_Audio     PermissionInfo_Permission = 3
	PermissionInfo_File      PermissionInfo_Permission = 4
)

// Enum value maps for PermissionInfo_Permission.
var (
	PermissionInfo_Permission_name = map[int32]string{
		0: "Keyboard",
		2: "Clipboard",
		3: "Audio",
		4: "File",
	}
	PermissionInfo_Permission_value = map[string]int32{
		"Keyboard":  0,
		"Clipboard": 2,
		"Audio":     3,
		"File":      4,
	}
)

func (x PermissionInfo_Permission) Enum() *PermissionInfo_Permission {
	p := new(PermissionInfo_Permission)
	*p = x
	return p
}

func (x PermissionInfo_Permission) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PermissionInfo_Permission) Descriptor() protoreflect.EnumDescriptor {
	return file_model_protos_message_proto_enumTypes[3].Descriptor()
}

func (PermissionInfo_Permission) Type() protoreflect.EnumType {
	return &file_model_protos_message_proto_enumTypes[3]
}

func (x PermissionInfo_Permission) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PermissionInfo_Permission.Descriptor instead.
func (PermissionInfo_Permission) EnumDescriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{44, 0}
}

type OptionMessage_BoolOption int32

const (
	OptionMessage_NotSet OptionMessage_BoolOption = 0
	OptionMessage_No     OptionMessage_BoolOption = 1
	OptionMessage_Yes    OptionMessage_BoolOption = 2
)

// Enum value maps for OptionMessage_BoolOption.
var (
	OptionMessage_BoolOption_name = map[int32]string{
		0: "NotSet",
		1: "No",
		2: "Yes",
	}
	OptionMessage_BoolOption_value = map[string]int32{
		"NotSet": 0,
		"No":     1,
		"Yes":    2,
	}
)

func (x OptionMessage_BoolOption) Enum() *OptionMessage_BoolOption {
	p := new(OptionMessage_BoolOption)
	*p = x
	return p
}

func (x OptionMessage_BoolOption) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (OptionMessage_BoolOption) Descriptor() protoreflect.EnumDescriptor {
	return file_model_protos_message_proto_enumTypes[4].Descriptor()
}

func (OptionMessage_BoolOption) Type() protoreflect.EnumType {
	return &file_model_protos_message_proto_enumTypes[4]
}

func (x OptionMessage_BoolOption) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use OptionMessage_BoolOption.Descriptor instead.
func (OptionMessage_BoolOption) EnumDescriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{45, 0}
}

type VP9 struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	Key  bool   `protobuf:"varint,2,opt,name=key,proto3" json:"key,omitempty"`
	Pts  int64  `protobuf:"varint,3,opt,name=pts,proto3" json:"pts,omitempty"`
}

func (x *VP9) Reset() {
	*x = VP9{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VP9) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VP9) ProtoMessage() {}

func (x *VP9) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VP9.ProtoReflect.Descriptor instead.
func (*VP9) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{0}
}

func (x *VP9) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *VP9) GetKey() bool {
	if x != nil {
		return x.Key
	}
	return false
}

func (x *VP9) GetPts() int64 {
	if x != nil {
		return x.Pts
	}
	return 0
}

type VP9S struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Frames []*VP9 `protobuf:"bytes,1,rep,name=frames,proto3" json:"frames,omitempty"`
}

func (x *VP9S) Reset() {
	*x = VP9S{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VP9S) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VP9S) ProtoMessage() {}

func (x *VP9S) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VP9S.ProtoReflect.Descriptor instead.
func (*VP9S) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{1}
}

func (x *VP9S) GetFrames() []*VP9 {
	if x != nil {
		return x.Frames
	}
	return nil
}

type RGB struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Compress bool `protobuf:"varint,1,opt,name=compress,proto3" json:"compress,omitempty"`
}

func (x *RGB) Reset() {
	*x = RGB{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RGB) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RGB) ProtoMessage() {}

func (x *RGB) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RGB.ProtoReflect.Descriptor instead.
func (*RGB) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{2}
}

func (x *RGB) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

// planes data send directly in binary for better use arraybuffer on web
type YUV struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Compress bool  `protobuf:"varint,1,opt,name=compress,proto3" json:"compress,omitempty"`
	Stride   int32 `protobuf:"varint,2,opt,name=stride,proto3" json:"stride,omitempty"`
}

func (x *YUV) Reset() {
	*x = YUV{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *YUV) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*YUV) ProtoMessage() {}

func (x *YUV) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use YUV.ProtoReflect.Descriptor instead.
func (*YUV) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{3}
}

func (x *YUV) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

func (x *YUV) GetStride() int32 {
	if x != nil {
		return x.Stride
	}
	return 0
}

type VideoFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*VideoFrame_Vp9S
	//	*VideoFrame_Rgb
	//	*VideoFrame_Yuv
	Union isVideoFrame_Union `protobuf_oneof:"union"`
}

func (x *VideoFrame) Reset() {
	*x = VideoFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoFrame) ProtoMessage() {}

func (x *VideoFrame) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoFrame.ProtoReflect.Descriptor instead.
func (*VideoFrame) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{4}
}

func (m *VideoFrame) GetUnion() isVideoFrame_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *VideoFrame) GetVp9S() *VP9S {
	if x, ok := x.GetUnion().(*VideoFrame_Vp9S); ok {
		return x.Vp9S
	}
	return nil
}

func (x *VideoFrame) GetRgb() *RGB {
	if x, ok := x.GetUnion().(*VideoFrame_Rgb); ok {
		return x.Rgb
	}
	return nil
}

func (x *VideoFrame) GetYuv() *YUV {
	if x, ok := x.GetUnion().(*VideoFrame_Yuv); ok {
		return x.Yuv
	}
	return nil
}

type isVideoFrame_Union interface {
	isVideoFrame_Union()
}

type VideoFrame_Vp9S struct {
	Vp9S *VP9S `protobuf:"bytes,6,opt,name=vp9s,proto3,oneof"`
}

type VideoFrame_Rgb struct {
	Rgb *RGB `protobuf:"bytes,7,opt,name=rgb,proto3,oneof"`
}

type VideoFrame_Yuv struct {
	Yuv *YUV `protobuf:"bytes,8,opt,name=yuv,proto3,oneof"`
}

func (*VideoFrame_Vp9S) isVideoFrame_Union() {}

func (*VideoFrame_Rgb) isVideoFrame_Union() {}

func (*VideoFrame_Yuv) isVideoFrame_Union() {}

type IdPk struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id string `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Pk []byte `protobuf:"bytes,2,opt,name=pk,proto3" json:"pk,omitempty"`
}

func (x *IdPk) Reset() {
	*x = IdPk{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *IdPk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdPk) ProtoMessage() {}

func (x *IdPk) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdPk.ProtoReflect.Descriptor instead.
func (*IdPk) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{5}
}

func (x *IdPk) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IdPk) GetPk() []byte {
	if x != nil {
		return x.Pk
	}
	return nil
}

type DisplayInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X      int32  `protobuf:"zigzag32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y      int32  `protobuf:"zigzag32,2,opt,name=y,proto3" json:"y,omitempty"`
	Width  int32  `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	Name   string `protobuf:"bytes,5,opt,name=name,proto3" json:"name,omitempty"`
	Online bool   `protobuf:"varint,6,opt,name=online,proto3" json:"online,omitempty"`
}

func (x *DisplayInfo) Reset() {
	*x = DisplayInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisplayInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisplayInfo) ProtoMessage() {}

func (x *DisplayInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisplayInfo.ProtoReflect.Descriptor instead.
func (*DisplayInfo) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{6}
}

func (x *DisplayInfo) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *DisplayInfo) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *DisplayInfo) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *DisplayInfo) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *DisplayInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *DisplayInfo) GetOnline() bool {
	if x != nil {
		return x.Online
	}
	return false
}

type PortForward struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Host string `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`
	Port int32  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"`
}

func (x *PortForward) Reset() {
	*x = PortForward{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortForward) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortForward) ProtoMessage() {}

func (x *PortForward) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortForward.ProtoReflect.Descriptor instead.
func (*PortForward) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{7}
}

func (x *PortForward) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *PortForward) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

type FileTransfer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Dir        string `protobuf:"bytes,1,opt,name=dir,proto3" json:"dir,omitempty"`
	ShowHidden bool   `protobuf:"varint,2,opt,name=show_hidden,json=showHidden,proto3" json:"show_hidden,omitempty"`
}

func (x *FileTransfer) Reset() {
	*x = FileTransfer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransfer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransfer) ProtoMessage() {}

func (x *FileTransfer) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransfer.ProtoReflect.Descriptor instead.
func (*FileTransfer) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{8}
}

func (x *FileTransfer) GetDir() string {
	if x != nil {
		return x.Dir
	}
	return ""
}

func (x *FileTransfer) GetShowHidden() bool {
	if x != nil {
		return x.ShowHidden
	}
	return false
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string         `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password []byte         `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	MyId     string         `protobuf:"bytes,4,opt,name=my_id,json=myId,proto3" json:"my_id,omitempty"`
	MyName   string         `protobuf:"bytes,5,opt,name=my_name,json=myName,proto3" json:"my_name,omitempty"`
	Option   *OptionMessage `protobuf:"bytes,6,opt,name=option,proto3" json:"option,omitempty"`
	// Types that are assignable to Union:
	//
	//	*LoginRequest_FileTransfer
	//	*LoginRequest_PortForward
	Union            isLoginRequest_Union `protobuf_oneof:"union"`
	VideoAckRequired bool                 `protobuf:"varint,9,opt,name=video_ack_required,json=videoAckRequired,proto3" json:"video_ack_required,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{9}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() []byte {
	if x != nil {
		return x.Password
	}
	return nil
}

func (x *LoginRequest) GetMyId() string {
	if x != nil {
		return x.MyId
	}
	return ""
}

func (x *LoginRequest) GetMyName() string {
	if x != nil {
		return x.MyName
	}
	return ""
}

func (x *LoginRequest) GetOption() *OptionMessage {
	if x != nil {
		return x.Option
	}
	return nil
}

func (m *LoginRequest) GetUnion() isLoginRequest_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *LoginRequest) GetFileTransfer() *FileTransfer {
	if x, ok := x.GetUnion().(*LoginRequest_FileTransfer); ok {
		return x.FileTransfer
	}
	return nil
}

func (x *LoginRequest) GetPortForward() *PortForward {
	if x, ok := x.GetUnion().(*LoginRequest_PortForward); ok {
		return x.PortForward
	}
	return nil
}

func (x *LoginRequest) GetVideoAckRequired() bool {
	if x != nil {
		return x.VideoAckRequired
	}
	return false
}

type isLoginRequest_Union interface {
	isLoginRequest_Union()
}

type LoginRequest_FileTransfer struct {
	FileTransfer *FileTransfer `protobuf:"bytes,7,opt,name=file_transfer,json=fileTransfer,proto3,oneof"`
}

type LoginRequest_PortForward struct {
	PortForward *PortForward `protobuf:"bytes,8,opt,name=port_forward,json=portForward,proto3,oneof"`
}

func (*LoginRequest_FileTransfer) isLoginRequest_Union() {}

func (*LoginRequest_PortForward) isLoginRequest_Union() {}

type ChatMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *ChatMessage) Reset() {
	*x = ChatMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatMessage) ProtoMessage() {}

func (x *ChatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatMessage.ProtoReflect.Descriptor instead.
func (*ChatMessage) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{10}
}

func (x *ChatMessage) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type PeerInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username       string         `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Hostname       string         `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Platform       string         `protobuf:"bytes,3,opt,name=platform,proto3" json:"platform,omitempty"`
	Displays       []*DisplayInfo `protobuf:"bytes,4,rep,name=displays,proto3" json:"displays,omitempty"`
	CurrentDisplay int32          `protobuf:"varint,5,opt,name=current_display,json=currentDisplay,proto3" json:"current_display,omitempty"`
	SasEnabled     bool           `protobuf:"varint,6,opt,name=sas_enabled,json=sasEnabled,proto3" json:"sas_enabled,omitempty"`
	Version        string         `protobuf:"bytes,7,opt,name=version,proto3" json:"version,omitempty"`
	ConnId         int32          `protobuf:"varint,8,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
}

func (x *PeerInfo) Reset() {
	*x = PeerInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PeerInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PeerInfo) ProtoMessage() {}

func (x *PeerInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PeerInfo.ProtoReflect.Descriptor instead.
func (*PeerInfo) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{11}
}

func (x *PeerInfo) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *PeerInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *PeerInfo) GetPlatform() string {
	if x != nil {
		return x.Platform
	}
	return ""
}

func (x *PeerInfo) GetDisplays() []*DisplayInfo {
	if x != nil {
		return x.Displays
	}
	return nil
}

func (x *PeerInfo) GetCurrentDisplay() int32 {
	if x != nil {
		return x.CurrentDisplay
	}
	return 0
}

func (x *PeerInfo) GetSasEnabled() bool {
	if x != nil {
		return x.SasEnabled
	}
	return false
}

func (x *PeerInfo) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *PeerInfo) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*LoginResponse_Error
	//	*LoginResponse_PeerInfo
	Union isLoginResponse_Union `protobuf_oneof:"union"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{12}
}

func (m *LoginResponse) GetUnion() isLoginResponse_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *LoginResponse) GetError() string {
	if x, ok := x.GetUnion().(*LoginResponse_Error); ok {
		return x.Error
	}
	return ""
}

func (x *LoginResponse) GetPeerInfo() *PeerInfo {
	if x, ok := x.GetUnion().(*LoginResponse_PeerInfo); ok {
		return x.PeerInfo
	}
	return nil
}

type isLoginResponse_Union interface {
	isLoginResponse_Union()
}

type LoginResponse_Error struct {
	Error string `protobuf:"bytes,1,opt,name=error,proto3,oneof"`
}

type LoginResponse_PeerInfo struct {
	PeerInfo *PeerInfo `protobuf:"bytes,2,opt,name=peer_info,json=peerInfo,proto3,oneof"`
}

func (*LoginResponse_Error) isLoginResponse_Union() {}

func (*LoginResponse_PeerInfo) isLoginResponse_Union() {}

type MouseEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mask      int32        `protobuf:"varint,1,opt,name=mask,proto3" json:"mask,omitempty"`
	X         int32        `protobuf:"zigzag32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y         int32        `protobuf:"zigzag32,3,opt,name=y,proto3" json:"y,omitempty"`
	Modifiers []ControlKey `protobuf:"varint,4,rep,packed,name=modifiers,proto3,enum=hbb.ControlKey" json:"modifiers,omitempty"`
}

func (x *MouseEvent) Reset() {
	*x = MouseEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MouseEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MouseEvent) ProtoMessage() {}

func (x *MouseEvent) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MouseEvent.ProtoReflect.Descriptor instead.
func (*MouseEvent) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{13}
}

func (x *MouseEvent) GetMask() int32 {
	if x != nil {
		return x.Mask
	}
	return 0
}

func (x *MouseEvent) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *MouseEvent) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *MouseEvent) GetModifiers() []ControlKey {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

type KeyEvent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Down  bool `protobuf:"varint,1,opt,name=down,proto3" json:"down,omitempty"`
	Press bool `protobuf:"varint,2,opt,name=press,proto3" json:"press,omitempty"`
	// Types that are assignable to Union:
	//
	//	*KeyEvent_ControlKey
	//	*KeyEvent_Chr
	//	*KeyEvent_Unicode
	//	*KeyEvent_Seq
	Union     isKeyEvent_Union `protobuf_oneof:"union"`
	Modifiers []ControlKey     `protobuf:"varint,8,rep,packed,name=modifiers,proto3,enum=hbb.ControlKey" json:"modifiers,omitempty"`
}

func (x *KeyEvent) Reset() {
	*x = KeyEvent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *KeyEvent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KeyEvent) ProtoMessage() {}

func (x *KeyEvent) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KeyEvent.ProtoReflect.Descriptor instead.
func (*KeyEvent) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{14}
}

func (x *KeyEvent) GetDown() bool {
	if x != nil {
		return x.Down
	}
	return false
}

func (x *KeyEvent) GetPress() bool {
	if x != nil {
		return x.Press
	}
	return false
}

func (m *KeyEvent) GetUnion() isKeyEvent_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *KeyEvent) GetControlKey() ControlKey {
	if x, ok := x.GetUnion().(*KeyEvent_ControlKey); ok {
		return x.ControlKey
	}
	return ControlKey_Unknown
}

func (x *KeyEvent) GetChr() uint32 {
	if x, ok := x.GetUnion().(*KeyEvent_Chr); ok {
		return x.Chr
	}
	return 0
}

func (x *KeyEvent) GetUnicode() uint32 {
	if x, ok := x.GetUnion().(*KeyEvent_Unicode); ok {
		return x.Unicode
	}
	return 0
}

func (x *KeyEvent) GetSeq() string {
	if x, ok := x.GetUnion().(*KeyEvent_Seq); ok {
		return x.Seq
	}
	return ""
}

func (x *KeyEvent) GetModifiers() []ControlKey {
	if x != nil {
		return x.Modifiers
	}
	return nil
}

type isKeyEvent_Union interface {
	isKeyEvent_Union()
}

type KeyEvent_ControlKey struct {
	ControlKey ControlKey `protobuf:"varint,3,opt,name=control_key,json=controlKey,proto3,enum=hbb.ControlKey,oneof"`
}

type KeyEvent_Chr struct {
	Chr uint32 `protobuf:"varint,4,opt,name=chr,proto3,oneof"`
}

type KeyEvent_Unicode struct {
	Unicode uint32 `protobuf:"varint,5,opt,name=unicode,proto3,oneof"`
}

type KeyEvent_Seq struct {
	Seq string `protobuf:"bytes,6,opt,name=seq,proto3,oneof"`
}

func (*KeyEvent_ControlKey) isKeyEvent_Union() {}

func (*KeyEvent_Chr) isKeyEvent_Union() {}

func (*KeyEvent_Unicode) isKeyEvent_Union() {}

func (*KeyEvent_Seq) isKeyEvent_Union() {}

type CursorData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id     uint64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Hotx   int32  `protobuf:"zigzag32,2,opt,name=hotx,proto3" json:"hotx,omitempty"`
	Hoty   int32  `protobuf:"zigzag32,3,opt,name=hoty,proto3" json:"hoty,omitempty"`
	Width  int32  `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height int32  `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
	Colors []byte `protobuf:"bytes,6,opt,name=colors,proto3" json:"colors,omitempty"`
}

func (x *CursorData) Reset() {
	*x = CursorData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorData) ProtoMessage() {}

func (x *CursorData) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorData.ProtoReflect.Descriptor instead.
func (*CursorData) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{15}
}

func (x *CursorData) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CursorData) GetHotx() int32 {
	if x != nil {
		return x.Hotx
	}
	return 0
}

func (x *CursorData) GetHoty() int32 {
	if x != nil {
		return x.Hoty
	}
	return 0
}

func (x *CursorData) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *CursorData) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *CursorData) GetColors() []byte {
	if x != nil {
		return x.Colors
	}
	return nil
}

type CursorPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	X int32 `protobuf:"zigzag32,1,opt,name=x,proto3" json:"x,omitempty"`
	Y int32 `protobuf:"zigzag32,2,opt,name=y,proto3" json:"y,omitempty"`
}

func (x *CursorPosition) Reset() {
	*x = CursorPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CursorPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CursorPosition) ProtoMessage() {}

func (x *CursorPosition) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CursorPosition.ProtoReflect.Descriptor instead.
func (*CursorPosition) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{16}
}

func (x *CursorPosition) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *CursorPosition) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

type Hash struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Salt      string `protobuf:"bytes,1,opt,name=salt,proto3" json:"salt,omitempty"`
	Challenge string `protobuf:"bytes,2,opt,name=challenge,proto3" json:"challenge,omitempty"`
}

func (x *Hash) Reset() {
	*x = Hash{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Hash) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Hash) ProtoMessage() {}

func (x *Hash) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Hash.ProtoReflect.Descriptor instead.
func (*Hash) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{17}
}

func (x *Hash) GetSalt() string {
	if x != nil {
		return x.Salt
	}
	return ""
}

func (x *Hash) GetChallenge() string {
	if x != nil {
		return x.Challenge
	}
	return ""
}

type Clipboard struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Compress bool   `protobuf:"varint,1,opt,name=compress,proto3" json:"compress,omitempty"`
	Content  []byte `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
}

func (x *Clipboard) Reset() {
	*x = Clipboard{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Clipboard) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Clipboard) ProtoMessage() {}

func (x *Clipboard) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Clipboard.ProtoReflect.Descriptor instead.
func (*Clipboard) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{18}
}

func (x *Clipboard) GetCompress() bool {
	if x != nil {
		return x.Compress
	}
	return false
}

func (x *Clipboard) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

type FileEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EntryType    FileType `protobuf:"varint,1,opt,name=entry_type,json=entryType,proto3,enum=hbb.FileType" json:"entry_type,omitempty"`
	Name         string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	IsHidden     bool     `protobuf:"varint,3,opt,name=is_hidden,json=isHidden,proto3" json:"is_hidden,omitempty"`
	Size         uint64   `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`
	ModifiedTime uint64   `protobuf:"varint,5,opt,name=modified_time,json=modifiedTime,proto3" json:"modified_time,omitempty"`
}

func (x *FileEntry) Reset() {
	*x = FileEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileEntry) ProtoMessage() {}

func (x *FileEntry) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileEntry.ProtoReflect.Descriptor instead.
func (*FileEntry) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{19}
}

func (x *FileEntry) GetEntryType() FileType {
	if x != nil {
		return x.EntryType
	}
	return FileType_Dir
}

func (x *FileEntry) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FileEntry) GetIsHidden() bool {
	if x != nil {
		return x.IsHidden
	}
	return false
}

func (x *FileEntry) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *FileEntry) GetModifiedTime() uint64 {
	if x != nil {
		return x.ModifiedTime
	}
	return 0
}

type FileDirectory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path    string       `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Entries []*FileEntry `protobuf:"bytes,3,rep,name=entries,proto3" json:"entries,omitempty"`
}

func (x *FileDirectory) Reset() {
	*x = FileDirectory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDirectory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDirectory) ProtoMessage() {}

func (x *FileDirectory) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDirectory.ProtoReflect.Descriptor instead.
func (*FileDirectory) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{20}
}

func (x *FileDirectory) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileDirectory) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileDirectory) GetEntries() []*FileEntry {
	if x != nil {
		return x.Entries
	}
	return nil
}

type ReadDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Path          string `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	IncludeHidden bool   `protobuf:"varint,2,opt,name=include_hidden,json=includeHidden,proto3" json:"include_hidden,omitempty"`
}

func (x *ReadDir) Reset() {
	*x = ReadDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadDir) ProtoMessage() {}

func (x *ReadDir) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadDir.ProtoReflect.Descriptor instead.
func (*ReadDir) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{21}
}

func (x *ReadDir) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadDir) GetIncludeHidden() bool {
	if x != nil {
		return x.IncludeHidden
	}
	return false
}

type ReadAllFiles struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	IncludeHidden bool   `protobuf:"varint,3,opt,name=include_hidden,json=includeHidden,proto3" json:"include_hidden,omitempty"`
}

func (x *ReadAllFiles) Reset() {
	*x = ReadAllFiles{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ReadAllFiles) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadAllFiles) ProtoMessage() {}

func (x *ReadAllFiles) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadAllFiles.ProtoReflect.Descriptor instead.
func (*ReadAllFiles) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{22}
}

func (x *ReadAllFiles) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReadAllFiles) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReadAllFiles) GetIncludeHidden() bool {
	if x != nil {
		return x.IncludeHidden
	}
	return false
}

type FileAction struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*FileAction_ReadDir
	//	*FileAction_Send
	//	*FileAction_Receive
	//	*FileAction_Create
	//	*FileAction_RemoveDir
	//	*FileAction_RemoveFile
	//	*FileAction_AllFiles
	//	*FileAction_Cancel
	Union isFileAction_Union `protobuf_oneof:"union"`
}

func (x *FileAction) Reset() {
	*x = FileAction{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileAction) ProtoMessage() {}

func (x *FileAction) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileAction.ProtoReflect.Descriptor instead.
func (*FileAction) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{23}
}

func (m *FileAction) GetUnion() isFileAction_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *FileAction) GetReadDir() *ReadDir {
	if x, ok := x.GetUnion().(*FileAction_ReadDir); ok {
		return x.ReadDir
	}
	return nil
}

func (x *FileAction) GetSend() *FileTransferSendRequest {
	if x, ok := x.GetUnion().(*FileAction_Send); ok {
		return x.Send
	}
	return nil
}

func (x *FileAction) GetReceive() *FileTransferReceiveRequest {
	if x, ok := x.GetUnion().(*FileAction_Receive); ok {
		return x.Receive
	}
	return nil
}

func (x *FileAction) GetCreate() *FileDirCreate {
	if x, ok := x.GetUnion().(*FileAction_Create); ok {
		return x.Create
	}
	return nil
}

func (x *FileAction) GetRemoveDir() *FileRemoveDir {
	if x, ok := x.GetUnion().(*FileAction_RemoveDir); ok {
		return x.RemoveDir
	}
	return nil
}

func (x *FileAction) GetRemoveFile() *FileRemoveFile {
	if x, ok := x.GetUnion().(*FileAction_RemoveFile); ok {
		return x.RemoveFile
	}
	return nil
}

func (x *FileAction) GetAllFiles() *ReadAllFiles {
	if x, ok := x.GetUnion().(*FileAction_AllFiles); ok {
		return x.AllFiles
	}
	return nil
}

func (x *FileAction) GetCancel() *FileTransferCancel {
	if x, ok := x.GetUnion().(*FileAction_Cancel); ok {
		return x.Cancel
	}
	return nil
}

type isFileAction_Union interface {
	isFileAction_Union()
}

type FileAction_ReadDir struct {
	ReadDir *ReadDir `protobuf:"bytes,1,opt,name=read_dir,json=readDir,proto3,oneof"`
}

type FileAction_Send struct {
	Send *FileTransferSendRequest `protobuf:"bytes,2,opt,name=send,proto3,oneof"`
}

type FileAction_Receive struct {
	Receive *FileTransferReceiveRequest `protobuf:"bytes,3,opt,name=receive,proto3,oneof"`
}

type FileAction_Create struct {
	Create *FileDirCreate `protobuf:"bytes,4,opt,name=create,proto3,oneof"`
}

type FileAction_RemoveDir struct {
	RemoveDir *FileRemoveDir `protobuf:"bytes,5,opt,name=remove_dir,json=removeDir,proto3,oneof"`
}

type FileAction_RemoveFile struct {
	RemoveFile *FileRemoveFile `protobuf:"bytes,6,opt,name=remove_file,json=removeFile,proto3,oneof"`
}

type FileAction_AllFiles struct {
	AllFiles *ReadAllFiles `protobuf:"bytes,7,opt,name=all_files,json=allFiles,proto3,oneof"`
}

type FileAction_Cancel struct {
	Cancel *FileTransferCancel `protobuf:"bytes,8,opt,name=cancel,proto3,oneof"`
}

func (*FileAction_ReadDir) isFileAction_Union() {}

func (*FileAction_Send) isFileAction_Union() {}

func (*FileAction_Receive) isFileAction_Union() {}

func (*FileAction_Create) isFileAction_Union() {}

func (*FileAction_RemoveDir) isFileAction_Union() {}

func (*FileAction_RemoveFile) isFileAction_Union() {}

func (*FileAction_AllFiles) isFileAction_Union() {}

func (*FileAction_Cancel) isFileAction_Union() {}

type FileTransferCancel struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *FileTransferCancel) Reset() {
	*x = FileTransferCancel{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferCancel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferCancel) ProtoMessage() {}

func (x *FileTransferCancel) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferCancel.ProtoReflect.Descriptor instead.
func (*FileTransferCancel) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{24}
}

func (x *FileTransferCancel) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type FileResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*FileResponse_Dir
	//	*FileResponse_Block
	//	*FileResponse_Error
	//	*FileResponse_Done
	Union isFileResponse_Union `protobuf_oneof:"union"`
}

func (x *FileResponse) Reset() {
	*x = FileResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileResponse) ProtoMessage() {}

func (x *FileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileResponse.ProtoReflect.Descriptor instead.
func (*FileResponse) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{25}
}

func (m *FileResponse) GetUnion() isFileResponse_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *FileResponse) GetDir() *FileDirectory {
	if x, ok := x.GetUnion().(*FileResponse_Dir); ok {
		return x.Dir
	}
	return nil
}

func (x *FileResponse) GetBlock() *FileTransferBlock {
	if x, ok := x.GetUnion().(*FileResponse_Block); ok {
		return x.Block
	}
	return nil
}

func (x *FileResponse) GetError() *FileTransferError {
	if x, ok := x.GetUnion().(*FileResponse_Error); ok {
		return x.Error
	}
	return nil
}

func (x *FileResponse) GetDone() *FileTransferDone {
	if x, ok := x.GetUnion().(*FileResponse_Done); ok {
		return x.Done
	}
	return nil
}

type isFileResponse_Union interface {
	isFileResponse_Union()
}

type FileResponse_Dir struct {
	Dir *FileDirectory `protobuf:"bytes,1,opt,name=dir,proto3,oneof"`
}

type FileResponse_Block struct {
	Block *FileTransferBlock `protobuf:"bytes,2,opt,name=block,proto3,oneof"`
}

type FileResponse_Error struct {
	Error *FileTransferError `protobuf:"bytes,3,opt,name=error,proto3,oneof"`
}

type FileResponse_Done struct {
	Done *FileTransferDone `protobuf:"bytes,4,opt,name=done,proto3,oneof"`
}

func (*FileResponse_Dir) isFileResponse_Union() {}

func (*FileResponse_Block) isFileResponse_Union() {}

func (*FileResponse_Error) isFileResponse_Union() {}

func (*FileResponse_Done) isFileResponse_Union() {}

type FileTransferBlock struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FileNum    int32  `protobuf:"zigzag32,2,opt,name=file_num,json=fileNum,proto3" json:"file_num,omitempty"`
	Data       []byte `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"`
	Compressed bool   `protobuf:"varint,4,opt,name=compressed,proto3" json:"compressed,omitempty"`
}

func (x *FileTransferBlock) Reset() {
	*x = FileTransferBlock{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferBlock) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferBlock) ProtoMessage() {}

func (x *FileTransferBlock) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferBlock.ProtoReflect.Descriptor instead.
func (*FileTransferBlock) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{26}
}

func (x *FileTransferBlock) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileTransferBlock) GetFileNum() int32 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

func (x *FileTransferBlock) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *FileTransferBlock) GetCompressed() bool {
	if x != nil {
		return x.Compressed
	}
	return false
}

type FileTransferError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Error   string `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	FileNum int32  `protobuf:"zigzag32,3,opt,name=file_num,json=fileNum,proto3" json:"file_num,omitempty"`
}

func (x *FileTransferError) Reset() {
	*x = FileTransferError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferError) ProtoMessage() {}

func (x *FileTransferError) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferError.ProtoReflect.Descriptor instead.
func (*FileTransferError) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{27}
}

func (x *FileTransferError) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileTransferError) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *FileTransferError) GetFileNum() int32 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

type FileTransferSendRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path          string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	IncludeHidden bool   `protobuf:"varint,3,opt,name=include_hidden,json=includeHidden,proto3" json:"include_hidden,omitempty"`
}

func (x *FileTransferSendRequest) Reset() {
	*x = FileTransferSendRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferSendRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferSendRequest) ProtoMessage() {}

func (x *FileTransferSendRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferSendRequest.ProtoReflect.Descriptor instead.
func (*FileTransferSendRequest) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{28}
}

func (x *FileTransferSendRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileTransferSendRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileTransferSendRequest) GetIncludeHidden() bool {
	if x != nil {
		return x.IncludeHidden
	}
	return false
}

type FileTransferDone struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	FileNum int32 `protobuf:"zigzag32,2,opt,name=file_num,json=fileNum,proto3" json:"file_num,omitempty"`
}

func (x *FileTransferDone) Reset() {
	*x = FileTransferDone{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferDone) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferDone) ProtoMessage() {}

func (x *FileTransferDone) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferDone.ProtoReflect.Descriptor instead.
func (*FileTransferDone) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{29}
}

func (x *FileTransferDone) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileTransferDone) GetFileNum() int32 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

type FileTransferReceiveRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id    int32        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path  string       `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"` // path written to
	Files []*FileEntry `protobuf:"bytes,3,rep,name=files,proto3" json:"files,omitempty"`
}

func (x *FileTransferReceiveRequest) Reset() {
	*x = FileTransferReceiveRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileTransferReceiveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileTransferReceiveRequest) ProtoMessage() {}

func (x *FileTransferReceiveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileTransferReceiveRequest.ProtoReflect.Descriptor instead.
func (*FileTransferReceiveRequest) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{30}
}

func (x *FileTransferReceiveRequest) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileTransferReceiveRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileTransferReceiveRequest) GetFiles() []*FileEntry {
	if x != nil {
		return x.Files
	}
	return nil
}

type FileRemoveDir struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path      string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	Recursive bool   `protobuf:"varint,3,opt,name=recursive,proto3" json:"recursive,omitempty"`
}

func (x *FileRemoveDir) Reset() {
	*x = FileRemoveDir{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRemoveDir) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRemoveDir) ProtoMessage() {}

func (x *FileRemoveDir) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRemoveDir.ProtoReflect.Descriptor instead.
func (*FileRemoveDir) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{31}
}

func (x *FileRemoveDir) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileRemoveDir) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileRemoveDir) GetRecursive() bool {
	if x != nil {
		return x.Recursive
	}
	return false
}

type FileRemoveFile struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id      int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path    string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
	FileNum int32  `protobuf:"zigzag32,3,opt,name=file_num,json=fileNum,proto3" json:"file_num,omitempty"`
}

func (x *FileRemoveFile) Reset() {
	*x = FileRemoveFile{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileRemoveFile) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileRemoveFile) ProtoMessage() {}

func (x *FileRemoveFile) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileRemoveFile.ProtoReflect.Descriptor instead.
func (*FileRemoveFile) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{32}
}

func (x *FileRemoveFile) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileRemoveFile) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *FileRemoveFile) GetFileNum() int32 {
	if x != nil {
		return x.FileNum
	}
	return 0
}

type FileDirCreate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Path string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`
}

func (x *FileDirCreate) Reset() {
	*x = FileDirCreate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileDirCreate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDirCreate) ProtoMessage() {}

func (x *FileDirCreate) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDirCreate.ProtoReflect.Descriptor instead.
func (*FileDirCreate) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{33}
}

func (x *FileDirCreate) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FileDirCreate) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

// main logic from freeRDP
type CliprdrMonitorReady struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId int32 `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
}

func (x *CliprdrMonitorReady) Reset() {
	*x = CliprdrMonitorReady{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrMonitorReady) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrMonitorReady) ProtoMessage() {}

func (x *CliprdrMonitorReady) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrMonitorReady.ProtoReflect.Descriptor instead.
func (*CliprdrMonitorReady) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{34}
}

func (x *CliprdrMonitorReady) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

type CliprdrFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId int32  `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	Id     int32  `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	Format string `protobuf:"bytes,3,opt,name=format,proto3" json:"format,omitempty"`
}

func (x *CliprdrFormat) Reset() {
	*x = CliprdrFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrFormat) ProtoMessage() {}

func (x *CliprdrFormat) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrFormat.ProtoReflect.Descriptor instead.
func (*CliprdrFormat) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{35}
}

func (x *CliprdrFormat) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrFormat) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *CliprdrFormat) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

type CliprdrServerFormatList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId  int32            `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	Formats []*CliprdrFormat `protobuf:"bytes,2,rep,name=formats,proto3" json:"formats,omitempty"`
}

func (x *CliprdrServerFormatList) Reset() {
	*x = CliprdrServerFormatList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrServerFormatList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrServerFormatList) ProtoMessage() {}

func (x *CliprdrServerFormatList) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrServerFormatList.ProtoReflect.Descriptor instead.
func (*CliprdrServerFormatList) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{36}
}

func (x *CliprdrServerFormatList) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrServerFormatList) GetFormats() []*CliprdrFormat {
	if x != nil {
		return x.Formats
	}
	return nil
}

type CliprdrServerFormatListResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId   int32 `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	MsgFlags int32 `protobuf:"varint,2,opt,name=msg_flags,json=msgFlags,proto3" json:"msg_flags,omitempty"`
}

func (x *CliprdrServerFormatListResponse) Reset() {
	*x = CliprdrServerFormatListResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrServerFormatListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrServerFormatListResponse) ProtoMessage() {}

func (x *CliprdrServerFormatListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrServerFormatListResponse.ProtoReflect.Descriptor instead.
func (*CliprdrServerFormatListResponse) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{37}
}

func (x *CliprdrServerFormatListResponse) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrServerFormatListResponse) GetMsgFlags() int32 {
	if x != nil {
		return x.MsgFlags
	}
	return 0
}

type CliprdrServerFormatDataRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId            int32 `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	RequestedFormatId int32 `protobuf:"varint,2,opt,name=requested_format_id,json=requestedFormatId,proto3" json:"requested_format_id,omitempty"`
}

func (x *CliprdrServerFormatDataRequest) Reset() {
	*x = CliprdrServerFormatDataRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrServerFormatDataRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrServerFormatDataRequest) ProtoMessage() {}

func (x *CliprdrServerFormatDataRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrServerFormatDataRequest.ProtoReflect.Descriptor instead.
func (*CliprdrServerFormatDataRequest) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{38}
}

func (x *CliprdrServerFormatDataRequest) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrServerFormatDataRequest) GetRequestedFormatId() int32 {
	if x != nil {
		return x.RequestedFormatId
	}
	return 0
}

type CliprdrServerFormatDataResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId     int32  `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	MsgFlags   int32  `protobuf:"varint,2,opt,name=msg_flags,json=msgFlags,proto3" json:"msg_flags,omitempty"`
	FormatData []byte `protobuf:"bytes,3,opt,name=format_data,json=formatData,proto3" json:"format_data,omitempty"`
}

func (x *CliprdrServerFormatDataResponse) Reset() {
	*x = CliprdrServerFormatDataResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrServerFormatDataResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrServerFormatDataResponse) ProtoMessage() {}

func (x *CliprdrServerFormatDataResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrServerFormatDataResponse.ProtoReflect.Descriptor instead.
func (*CliprdrServerFormatDataResponse) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{39}
}

func (x *CliprdrServerFormatDataResponse) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrServerFormatDataResponse) GetMsgFlags() int32 {
	if x != nil {
		return x.MsgFlags
	}
	return 0
}

func (x *CliprdrServerFormatDataResponse) GetFormatData() []byte {
	if x != nil {
		return x.FormatData
	}
	return nil
}

type CliprdrFileContentsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId         int32 `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	StreamId       int32 `protobuf:"varint,2,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	ListIndex      int32 `protobuf:"varint,3,opt,name=list_index,json=listIndex,proto3" json:"list_index,omitempty"`
	DwFlags        int32 `protobuf:"varint,4,opt,name=dw_flags,json=dwFlags,proto3" json:"dw_flags,omitempty"`
	NPositionLow   int32 `protobuf:"varint,5,opt,name=n_position_low,json=nPositionLow,proto3" json:"n_position_low,omitempty"`
	NPositionHigh  int32 `protobuf:"varint,6,opt,name=n_position_high,json=nPositionHigh,proto3" json:"n_position_high,omitempty"`
	CbRequested    int32 `protobuf:"varint,7,opt,name=cb_requested,json=cbRequested,proto3" json:"cb_requested,omitempty"`
	HaveClipDataId bool  `protobuf:"varint,8,opt,name=have_clip_data_id,json=haveClipDataId,proto3" json:"have_clip_data_id,omitempty"`
	ClipDataId     int32 `protobuf:"varint,9,opt,name=clip_data_id,json=clipDataId,proto3" json:"clip_data_id,omitempty"`
}

func (x *CliprdrFileContentsRequest) Reset() {
	*x = CliprdrFileContentsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrFileContentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrFileContentsRequest) ProtoMessage() {}

func (x *CliprdrFileContentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrFileContentsRequest.ProtoReflect.Descriptor instead.
func (*CliprdrFileContentsRequest) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{40}
}

func (x *CliprdrFileContentsRequest) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetListIndex() int32 {
	if x != nil {
		return x.ListIndex
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetDwFlags() int32 {
	if x != nil {
		return x.DwFlags
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetNPositionLow() int32 {
	if x != nil {
		return x.NPositionLow
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetNPositionHigh() int32 {
	if x != nil {
		return x.NPositionHigh
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetCbRequested() int32 {
	if x != nil {
		return x.CbRequested
	}
	return 0
}

func (x *CliprdrFileContentsRequest) GetHaveClipDataId() bool {
	if x != nil {
		return x.HaveClipDataId
	}
	return false
}

func (x *CliprdrFileContentsRequest) GetClipDataId() int32 {
	if x != nil {
		return x.ClipDataId
	}
	return 0
}

type CliprdrFileContentsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ConnId        int32  `protobuf:"varint,1,opt,name=conn_id,json=connId,proto3" json:"conn_id,omitempty"`
	MsgFlags      int32  `protobuf:"varint,3,opt,name=msg_flags,json=msgFlags,proto3" json:"msg_flags,omitempty"`
	StreamId      int32  `protobuf:"varint,4,opt,name=stream_id,json=streamId,proto3" json:"stream_id,omitempty"`
	RequestedData []byte `protobuf:"bytes,5,opt,name=requested_data,json=requestedData,proto3" json:"requested_data,omitempty"`
}

func (x *CliprdrFileContentsResponse) Reset() {
	*x = CliprdrFileContentsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CliprdrFileContentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CliprdrFileContentsResponse) ProtoMessage() {}

func (x *CliprdrFileContentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CliprdrFileContentsResponse.ProtoReflect.Descriptor instead.
func (*CliprdrFileContentsResponse) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{41}
}

func (x *CliprdrFileContentsResponse) GetConnId() int32 {
	if x != nil {
		return x.ConnId
	}
	return 0
}

func (x *CliprdrFileContentsResponse) GetMsgFlags() int32 {
	if x != nil {
		return x.MsgFlags
	}
	return 0
}

func (x *CliprdrFileContentsResponse) GetStreamId() int32 {
	if x != nil {
		return x.StreamId
	}
	return 0
}

func (x *CliprdrFileContentsResponse) GetRequestedData() []byte {
	if x != nil {
		return x.RequestedData
	}
	return nil
}

type Cliprdr struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*Cliprdr_Ready
	//	*Cliprdr_FormatList
	//	*Cliprdr_FormatListResponse
	//	*Cliprdr_FormatDataRequest
	//	*Cliprdr_FormatDataResponse
	//	*Cliprdr_FileContentsRequest
	//	*Cliprdr_FileContentsResponse
	Union isCliprdr_Union `protobuf_oneof:"union"`
}

func (x *Cliprdr) Reset() {
	*x = Cliprdr{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Cliprdr) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Cliprdr) ProtoMessage() {}

func (x *Cliprdr) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Cliprdr.ProtoReflect.Descriptor instead.
func (*Cliprdr) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{42}
}

func (m *Cliprdr) GetUnion() isCliprdr_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *Cliprdr) GetReady() *CliprdrMonitorReady {
	if x, ok := x.GetUnion().(*Cliprdr_Ready); ok {
		return x.Ready
	}
	return nil
}

func (x *Cliprdr) GetFormatList() *CliprdrServerFormatList {
	if x, ok := x.GetUnion().(*Cliprdr_FormatList); ok {
		return x.FormatList
	}
	return nil
}

func (x *Cliprdr) GetFormatListResponse() *CliprdrServerFormatListResponse {
	if x, ok := x.GetUnion().(*Cliprdr_FormatListResponse); ok {
		return x.FormatListResponse
	}
	return nil
}

func (x *Cliprdr) GetFormatDataRequest() *CliprdrServerFormatDataRequest {
	if x, ok := x.GetUnion().(*Cliprdr_FormatDataRequest); ok {
		return x.FormatDataRequest
	}
	return nil
}

func (x *Cliprdr) GetFormatDataResponse() *CliprdrServerFormatDataResponse {
	if x, ok := x.GetUnion().(*Cliprdr_FormatDataResponse); ok {
		return x.FormatDataResponse
	}
	return nil
}

func (x *Cliprdr) GetFileContentsRequest() *CliprdrFileContentsRequest {
	if x, ok := x.GetUnion().(*Cliprdr_FileContentsRequest); ok {
		return x.FileContentsRequest
	}
	return nil
}

func (x *Cliprdr) GetFileContentsResponse() *CliprdrFileContentsResponse {
	if x, ok := x.GetUnion().(*Cliprdr_FileContentsResponse); ok {
		return x.FileContentsResponse
	}
	return nil
}

type isCliprdr_Union interface {
	isCliprdr_Union()
}

type Cliprdr_Ready struct {
	Ready *CliprdrMonitorReady `protobuf:"bytes,1,opt,name=ready,proto3,oneof"`
}

type Cliprdr_FormatList struct {
	FormatList *CliprdrServerFormatList `protobuf:"bytes,2,opt,name=format_list,json=formatList,proto3,oneof"`
}

type Cliprdr_FormatListResponse struct {
	FormatListResponse *CliprdrServerFormatListResponse `protobuf:"bytes,3,opt,name=format_list_response,json=formatListResponse,proto3,oneof"`
}

type Cliprdr_FormatDataRequest struct {
	FormatDataRequest *CliprdrServerFormatDataRequest `protobuf:"bytes,4,opt,name=format_data_request,json=formatDataRequest,proto3,oneof"`
}

type Cliprdr_FormatDataResponse struct {
	FormatDataResponse *CliprdrServerFormatDataResponse `protobuf:"bytes,5,opt,name=format_data_response,json=formatDataResponse,proto3,oneof"`
}

type Cliprdr_FileContentsRequest struct {
	FileContentsRequest *CliprdrFileContentsRequest `protobuf:"bytes,6,opt,name=file_contents_request,json=fileContentsRequest,proto3,oneof"`
}

type Cliprdr_FileContentsResponse struct {
	FileContentsResponse *CliprdrFileContentsResponse `protobuf:"bytes,7,opt,name=file_contents_response,json=fileContentsResponse,proto3,oneof"`
}

func (*Cliprdr_Ready) isCliprdr_Union() {}

func (*Cliprdr_FormatList) isCliprdr_Union() {}

func (*Cliprdr_FormatListResponse) isCliprdr_Union() {}

func (*Cliprdr_FormatDataRequest) isCliprdr_Union() {}

func (*Cliprdr_FormatDataResponse) isCliprdr_Union() {}

func (*Cliprdr_FileContentsRequest) isCliprdr_Union() {}

func (*Cliprdr_FileContentsResponse) isCliprdr_Union() {}

type SwitchDisplay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Display int32 `protobuf:"varint,1,opt,name=display,proto3" json:"display,omitempty"`
	X       int32 `protobuf:"zigzag32,2,opt,name=x,proto3" json:"x,omitempty"`
	Y       int32 `protobuf:"zigzag32,3,opt,name=y,proto3" json:"y,omitempty"`
	Width   int32 `protobuf:"varint,4,opt,name=width,proto3" json:"width,omitempty"`
	Height  int32 `protobuf:"varint,5,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *SwitchDisplay) Reset() {
	*x = SwitchDisplay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SwitchDisplay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SwitchDisplay) ProtoMessage() {}

func (x *SwitchDisplay) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SwitchDisplay.ProtoReflect.Descriptor instead.
func (*SwitchDisplay) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{43}
}

func (x *SwitchDisplay) GetDisplay() int32 {
	if x != nil {
		return x.Display
	}
	return 0
}

func (x *SwitchDisplay) GetX() int32 {
	if x != nil {
		return x.X
	}
	return 0
}

func (x *SwitchDisplay) GetY() int32 {
	if x != nil {
		return x.Y
	}
	return 0
}

func (x *SwitchDisplay) GetWidth() int32 {
	if x != nil {
		return x.Width
	}
	return 0
}

func (x *SwitchDisplay) GetHeight() int32 {
	if x != nil {
		return x.Height
	}
	return 0
}

type PermissionInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Permission PermissionInfo_Permission `protobuf:"varint,1,opt,name=permission,proto3,enum=hbb.PermissionInfo_Permission" json:"permission,omitempty"`
	Enabled    bool                      `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"`
}

func (x *PermissionInfo) Reset() {
	*x = PermissionInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionInfo) ProtoMessage() {}

func (x *PermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionInfo.ProtoReflect.Descriptor instead.
func (*PermissionInfo) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{44}
}

func (x *PermissionInfo) GetPermission() PermissionInfo_Permission {
	if x != nil {
		return x.Permission
	}
	return PermissionInfo_Keyboard
}

func (x *PermissionInfo) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type OptionMessage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageQuality        ImageQuality             `protobuf:"varint,1,opt,name=image_quality,json=imageQuality,proto3,enum=hbb.ImageQuality" json:"image_quality,omitempty"`
	LockAfterSessionEnd OptionMessage_BoolOption `protobuf:"varint,2,opt,name=lock_after_session_end,json=lockAfterSessionEnd,proto3,enum=hbb.OptionMessage_BoolOption" json:"lock_after_session_end,omitempty"`
	ShowRemoteCursor    OptionMessage_BoolOption `protobuf:"varint,3,opt,name=show_remote_cursor,json=showRemoteCursor,proto3,enum=hbb.OptionMessage_BoolOption" json:"show_remote_cursor,omitempty"`
	PrivacyMode         OptionMessage_BoolOption `protobuf:"varint,4,opt,name=privacy_mode,json=privacyMode,proto3,enum=hbb.OptionMessage_BoolOption" json:"privacy_mode,omitempty"`
	BlockInput          OptionMessage_BoolOption `protobuf:"varint,5,opt,name=block_input,json=blockInput,proto3,enum=hbb.OptionMessage_BoolOption" json:"block_input,omitempty"`
	CustomImageQuality  int32                    `protobuf:"varint,6,opt,name=custom_image_quality,json=customImageQuality,proto3" json:"custom_image_quality,omitempty"`
	DisableAudio        OptionMessage_BoolOption `protobuf:"varint,7,opt,name=disable_audio,json=disableAudio,proto3,enum=hbb.OptionMessage_BoolOption" json:"disable_audio,omitempty"`
	DisableClipboard    OptionMessage_BoolOption `protobuf:"varint,8,opt,name=disable_clipboard,json=disableClipboard,proto3,enum=hbb.OptionMessage_BoolOption" json:"disable_clipboard,omitempty"`
	EnableFileTransfer  OptionMessage_BoolOption `protobuf:"varint,9,opt,name=enable_file_transfer,json=enableFileTransfer,proto3,enum=hbb.OptionMessage_BoolOption" json:"enable_file_transfer,omitempty"`
}

func (x *OptionMessage) Reset() {
	*x = OptionMessage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionMessage) ProtoMessage() {}

func (x *OptionMessage) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionMessage.ProtoReflect.Descriptor instead.
func (*OptionMessage) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{45}
}

func (x *OptionMessage) GetImageQuality() ImageQuality {
	if x != nil {
		return x.ImageQuality
	}
	return ImageQuality_NotSet
}

func (x *OptionMessage) GetLockAfterSessionEnd() OptionMessage_BoolOption {
	if x != nil {
		return x.LockAfterSessionEnd
	}
	return OptionMessage_NotSet
}

func (x *OptionMessage) GetShowRemoteCursor() OptionMessage_BoolOption {
	if x != nil {
		return x.ShowRemoteCursor
	}
	return OptionMessage_NotSet
}

func (x *OptionMessage) GetPrivacyMode() OptionMessage_BoolOption {
	if x != nil {
		return x.PrivacyMode
	}
	return OptionMessage_NotSet
}

func (x *OptionMessage) GetBlockInput() OptionMessage_BoolOption {
	if x != nil {
		return x.BlockInput
	}
	return OptionMessage_NotSet
}

func (x *OptionMessage) GetCustomImageQuality() int32 {
	if x != nil {
		return x.CustomImageQuality
	}
	return 0
}

func (x *OptionMessage) GetDisableAudio() OptionMessage_BoolOption {
	if x != nil {
		return x.DisableAudio
	}
	return OptionMessage_NotSet
}

func (x *OptionMessage) GetDisableClipboard() OptionMessage_BoolOption {
	if x != nil {
		return x.DisableClipboard
	}
	return OptionMessage_NotSet
}

func (x *OptionMessage) GetEnableFileTransfer() OptionMessage_BoolOption {
	if x != nil {
		return x.EnableFileTransfer
	}
	return OptionMessage_NotSet
}

type OptionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Opt   *OptionMessage `protobuf:"bytes,1,opt,name=opt,proto3" json:"opt,omitempty"`
	Error string         `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
}

func (x *OptionResponse) Reset() {
	*x = OptionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OptionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OptionResponse) ProtoMessage() {}

func (x *OptionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OptionResponse.ProtoReflect.Descriptor instead.
func (*OptionResponse) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{46}
}

func (x *OptionResponse) GetOpt() *OptionMessage {
	if x != nil {
		return x.Opt
	}
	return nil
}

func (x *OptionResponse) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

type TestDelay struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Time       int64 `protobuf:"varint,1,opt,name=time,proto3" json:"time,omitempty"`
	FromClient bool  `protobuf:"varint,2,opt,name=from_client,json=fromClient,proto3" json:"from_client,omitempty"`
}

func (x *TestDelay) Reset() {
	*x = TestDelay{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestDelay) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestDelay) ProtoMessage() {}

func (x *TestDelay) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestDelay.ProtoReflect.Descriptor instead.
func (*TestDelay) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{47}
}

func (x *TestDelay) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

func (x *TestDelay) GetFromClient() bool {
	if x != nil {
		return x.FromClient
	}
	return false
}

type PublicKey struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AsymmetricValue []byte `protobuf:"bytes,1,opt,name=asymmetric_value,json=asymmetricValue,proto3" json:"asymmetric_value,omitempty"`
	SymmetricValue  []byte `protobuf:"bytes,2,opt,name=symmetric_value,json=symmetricValue,proto3" json:"symmetric_value,omitempty"`
}

func (x *PublicKey) Reset() {
	*x = PublicKey{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublicKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublicKey) ProtoMessage() {}

func (x *PublicKey) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublicKey.ProtoReflect.Descriptor instead.
func (*PublicKey) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{48}
}

func (x *PublicKey) GetAsymmetricValue() []byte {
	if x != nil {
		return x.AsymmetricValue
	}
	return nil
}

func (x *PublicKey) GetSymmetricValue() []byte {
	if x != nil {
		return x.SymmetricValue
	}
	return nil
}

type SignedId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id []byte `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *SignedId) Reset() {
	*x = SignedId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SignedId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignedId) ProtoMessage() {}

func (x *SignedId) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignedId.ProtoReflect.Descriptor instead.
func (*SignedId) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{49}
}

func (x *SignedId) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

type AudioFormat struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SampleRate uint32 `protobuf:"varint,1,opt,name=sample_rate,json=sampleRate,proto3" json:"sample_rate,omitempty"`
	Channels   uint32 `protobuf:"varint,2,opt,name=channels,proto3" json:"channels,omitempty"`
}

func (x *AudioFormat) Reset() {
	*x = AudioFormat{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioFormat) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFormat) ProtoMessage() {}

func (x *AudioFormat) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFormat.ProtoReflect.Descriptor instead.
func (*AudioFormat) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{50}
}

func (x *AudioFormat) GetSampleRate() uint32 {
	if x != nil {
		return x.SampleRate
	}
	return 0
}

func (x *AudioFormat) GetChannels() uint32 {
	if x != nil {
		return x.Channels
	}
	return 0
}

type AudioFrame struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data []byte `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AudioFrame) Reset() {
	*x = AudioFrame{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioFrame) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioFrame) ProtoMessage() {}

func (x *AudioFrame) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioFrame.ProtoReflect.Descriptor instead.
func (*AudioFrame) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{51}
}

func (x *AudioFrame) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type Misc struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*Misc_ChatMessage
	//	*Misc_SwitchDisplay
	//	*Misc_PermissionInfo
	//	*Misc_Option
	//	*Misc_AudioFormat
	//	*Misc_CloseReason
	//	*Misc_RefreshVideo
	//	*Misc_OptionResponse
	//	*Misc_VideoReceived
	Union isMisc_Union `protobuf_oneof:"union"`
}

func (x *Misc) Reset() {
	*x = Misc{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Misc) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Misc) ProtoMessage() {}

func (x *Misc) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Misc.ProtoReflect.Descriptor instead.
func (*Misc) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{52}
}

func (m *Misc) GetUnion() isMisc_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *Misc) GetChatMessage() *ChatMessage {
	if x, ok := x.GetUnion().(*Misc_ChatMessage); ok {
		return x.ChatMessage
	}
	return nil
}

func (x *Misc) GetSwitchDisplay() *SwitchDisplay {
	if x, ok := x.GetUnion().(*Misc_SwitchDisplay); ok {
		return x.SwitchDisplay
	}
	return nil
}

func (x *Misc) GetPermissionInfo() *PermissionInfo {
	if x, ok := x.GetUnion().(*Misc_PermissionInfo); ok {
		return x.PermissionInfo
	}
	return nil
}

func (x *Misc) GetOption() *OptionMessage {
	if x, ok := x.GetUnion().(*Misc_Option); ok {
		return x.Option
	}
	return nil
}

func (x *Misc) GetAudioFormat() *AudioFormat {
	if x, ok := x.GetUnion().(*Misc_AudioFormat); ok {
		return x.AudioFormat
	}
	return nil
}

func (x *Misc) GetCloseReason() string {
	if x, ok := x.GetUnion().(*Misc_CloseReason); ok {
		return x.CloseReason
	}
	return ""
}

func (x *Misc) GetRefreshVideo() bool {
	if x, ok := x.GetUnion().(*Misc_RefreshVideo); ok {
		return x.RefreshVideo
	}
	return false
}

func (x *Misc) GetOptionResponse() *OptionResponse {
	if x, ok := x.GetUnion().(*Misc_OptionResponse); ok {
		return x.OptionResponse
	}
	return nil
}

func (x *Misc) GetVideoReceived() bool {
	if x, ok := x.GetUnion().(*Misc_VideoReceived); ok {
		return x.VideoReceived
	}
	return false
}

type isMisc_Union interface {
	isMisc_Union()
}

type Misc_ChatMessage struct {
	ChatMessage *ChatMessage `protobuf:"bytes,4,opt,name=chat_message,json=chatMessage,proto3,oneof"`
}

type Misc_SwitchDisplay struct {
	SwitchDisplay *SwitchDisplay `protobuf:"bytes,5,opt,name=switch_display,json=switchDisplay,proto3,oneof"`
}

type Misc_PermissionInfo struct {
	PermissionInfo *PermissionInfo `protobuf:"bytes,6,opt,name=permission_info,json=permissionInfo,proto3,oneof"`
}

type Misc_Option struct {
	Option *OptionMessage `protobuf:"bytes,7,opt,name=option,proto3,oneof"`
}

type Misc_AudioFormat struct {
	AudioFormat *AudioFormat `protobuf:"bytes,8,opt,name=audio_format,json=audioFormat,proto3,oneof"`
}

type Misc_CloseReason struct {
	CloseReason string `protobuf:"bytes,9,opt,name=close_reason,json=closeReason,proto3,oneof"`
}

type Misc_RefreshVideo struct {
	RefreshVideo bool `protobuf:"varint,10,opt,name=refresh_video,json=refreshVideo,proto3,oneof"`
}

type Misc_OptionResponse struct {
	OptionResponse *OptionResponse `protobuf:"bytes,11,opt,name=option_response,json=optionResponse,proto3,oneof"`
}

type Misc_VideoReceived struct {
	VideoReceived bool `protobuf:"varint,12,opt,name=video_received,json=videoReceived,proto3,oneof"`
}

func (*Misc_ChatMessage) isMisc_Union() {}

func (*Misc_SwitchDisplay) isMisc_Union() {}

func (*Misc_PermissionInfo) isMisc_Union() {}

func (*Misc_Option) isMisc_Union() {}

func (*Misc_AudioFormat) isMisc_Union() {}

func (*Misc_CloseReason) isMisc_Union() {}

func (*Misc_RefreshVideo) isMisc_Union() {}

func (*Misc_OptionResponse) isMisc_Union() {}

func (*Misc_VideoReceived) isMisc_Union() {}

type Message struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Union:
	//
	//	*Message_SignedId
	//	*Message_PublicKey
	//	*Message_TestDelay
	//	*Message_VideoFrame
	//	*Message_LoginRequest
	//	*Message_LoginResponse
	//	*Message_Hash
	//	*Message_MouseEvent
	//	*Message_AudioFrame
	//	*Message_CursorData
	//	*Message_CursorPosition
	//	*Message_CursorId
	//	*Message_KeyEvent
	//	*Message_Clipboard
	//	*Message_FileAction
	//	*Message_FileResponse
	//	*Message_Misc
	//	*Message_Cliprdr
	Union isMessage_Union `protobuf_oneof:"union"`
}

func (x *Message) Reset() {
	*x = Message{}
	if protoimpl.UnsafeEnabled {
		mi := &file_model_protos_message_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Message) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Message) ProtoMessage() {}

func (x *Message) ProtoReflect() protoreflect.Message {
	mi := &file_model_protos_message_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Message.ProtoReflect.Descriptor instead.
func (*Message) Descriptor() ([]byte, []int) {
	return file_model_protos_message_proto_rawDescGZIP(), []int{53}
}

func (m *Message) GetUnion() isMessage_Union {
	if m != nil {
		return m.Union
	}
	return nil
}

func (x *Message) GetSignedId() *SignedId {
	if x, ok := x.GetUnion().(*Message_SignedId); ok {
		return x.SignedId
	}
	return nil
}

func (x *Message) GetPublicKey() *PublicKey {
	if x, ok := x.GetUnion().(*Message_PublicKey); ok {
		return x.PublicKey
	}
	return nil
}

func (x *Message) GetTestDelay() *TestDelay {
	if x, ok := x.GetUnion().(*Message_TestDelay); ok {
		return x.TestDelay
	}
	return nil
}

func (x *Message) GetVideoFrame() *VideoFrame {
	if x, ok := x.GetUnion().(*Message_VideoFrame); ok {
		return x.VideoFrame
	}
	return nil
}

func (x *Message) GetLoginRequest() *LoginRequest {
	if x, ok := x.GetUnion().(*Message_LoginRequest); ok {
		return x.LoginRequest
	}
	return nil
}

func (x *Message) GetLoginResponse() *LoginResponse {
	if x, ok := x.GetUnion().(*Message_LoginResponse); ok {
		return x.LoginResponse
	}
	return nil
}

func (x *Message) GetHash() *Hash {
	if x, ok := x.GetUnion().(*Message_Hash); ok {
		return x.Hash
	}
	return nil
}

func (x *Message) GetMouseEvent() *MouseEvent {
	if x, ok := x.GetUnion().(*Message_MouseEvent); ok {
		return x.MouseEvent
	}
	return nil
}

func (x *Message) GetAudioFrame() *AudioFrame {
	if x, ok := x.GetUnion().(*Message_AudioFrame); ok {
		return x.AudioFrame
	}
	return nil
}

func (x *Message) GetCursorData() *CursorData {
	if x, ok := x.GetUnion().(*Message_CursorData); ok {
		return x.CursorData
	}
	return nil
}

func (x *Message) GetCursorPosition() *CursorPosition {
	if x, ok := x.GetUnion().(*Message_CursorPosition); ok {
		return x.CursorPosition
	}
	return nil
}

func (x *Message) GetCursorId() uint64 {
	if x, ok := x.GetUnion().(*Message_CursorId); ok {
		return x.CursorId
	}
	return 0
}

func (x *Message) GetKeyEvent() *KeyEvent {
	if x, ok := x.GetUnion().(*Message_KeyEvent); ok {
		return x.KeyEvent
	}
	return nil
}

func (x *Message) GetClipboard() *Clipboard {
	if x, ok := x.GetUnion().(*Message_Clipboard); ok {
		return x.Clipboard
	}
	return nil
}

func (x *Message) GetFileAction() *FileAction {
	if x, ok := x.GetUnion().(*Message_FileAction); ok {
		return x.FileAction
	}
	return nil
}

func (x *Message) GetFileResponse() *FileResponse {
	if x, ok := x.GetUnion().(*Message_FileResponse); ok {
		return x.FileResponse
	}
	return nil
}

func (x *Message) GetMisc() *Misc {
	if x, ok := x.GetUnion().(*Message_Misc); ok {
		return x.Misc
	}
	return nil
}

func (x *Message) GetCliprdr() *Cliprdr {
	if x, ok := x.GetUnion().(*Message_Cliprdr); ok {
		return x.Cliprdr
	}
	return nil
}

type isMessage_Union interface {
	isMessage_Union()
}

type Message_SignedId struct {
	SignedId *SignedId `protobuf:"bytes,3,opt,name=signed_id,json=signedId,proto3,oneof"`
}

type Message_PublicKey struct {
	PublicKey *PublicKey `protobuf:"bytes,4,opt,name=public_key,json=publicKey,proto3,oneof"`
}

type Message_TestDelay struct {
	TestDelay *TestDelay `protobuf:"bytes,5,opt,name=test_delay,json=testDelay,proto3,oneof"`
}

type Message_VideoFrame struct {
	VideoFrame *VideoFrame `protobuf:"bytes,6,opt,name=video_frame,json=videoFrame,proto3,oneof"`
}

type Message_LoginRequest struct {
	LoginRequest *LoginRequest `protobuf:"bytes,7,opt,name=login_request,json=loginRequest,proto3,oneof"`
}

type Message_LoginResponse struct {
	LoginResponse *LoginResponse `protobuf:"bytes,8,opt,name=login_response,json=loginResponse,proto3,oneof"`
}

type Message_Hash struct {
	Hash *Hash `protobuf:"bytes,9,opt,name=hash,proto3,oneof"`
}

type Message_MouseEvent struct {
	MouseEvent *MouseEvent `protobuf:"bytes,10,opt,name=mouse_event,json=mouseEvent,proto3,oneof"`
}

type Message_AudioFrame struct {
	AudioFrame *AudioFrame `protobuf:"bytes,11,opt,name=audio_frame,json=audioFrame,proto3,oneof"`
}

type Message_CursorData struct {
	CursorData *CursorData `protobuf:"bytes,12,opt,name=cursor_data,json=cursorData,proto3,oneof"`
}

type Message_CursorPosition struct {
	CursorPosition *CursorPosition `protobuf:"bytes,13,opt,name=cursor_position,json=cursorPosition,proto3,oneof"`
}

type Message_CursorId struct {
	CursorId uint64 `protobuf:"varint,14,opt,name=cursor_id,json=cursorId,proto3,oneof"`
}

type Message_KeyEvent struct {
	KeyEvent *KeyEvent `protobuf:"bytes,15,opt,name=key_event,json=keyEvent,proto3,oneof"`
}

type Message_Clipboard struct {
	Clipboard *Clipboard `protobuf:"bytes,16,opt,name=clipboard,proto3,oneof"`
}

type Message_FileAction struct {
	FileAction *FileAction `protobuf:"bytes,17,opt,name=file_action,json=fileAction,proto3,oneof"`
}

type Message_FileResponse struct {
	FileResponse *FileResponse `protobuf:"bytes,18,opt,name=file_response,json=fileResponse,proto3,oneof"`
}

type Message_Misc struct {
	Misc *Misc `protobuf:"bytes,19,opt,name=misc,proto3,oneof"`
}

type Message_Cliprdr struct {
	Cliprdr *Cliprdr `protobuf:"bytes,20,opt,name=cliprdr,proto3,oneof"`
}

func (*Message_SignedId) isMessage_Union() {}

func (*Message_PublicKey) isMessage_Union() {}

func (*Message_TestDelay) isMessage_Union() {}

func (*Message_VideoFrame) isMessage_Union() {}

func (*Message_LoginRequest) isMessage_Union() {}

func (*Message_LoginResponse) isMessage_Union() {}

func (*Message_Hash) isMessage_Union() {}

func (*Message_MouseEvent) isMessage_Union() {}

func (*Message_AudioFrame) isMessage_Union() {}

func (*Message_CursorData) isMessage_Union() {}

func (*Message_CursorPosition) isMessage_Union() {}

func (*Message_CursorId) isMessage_Union() {}

func (*Message_KeyEvent) isMessage_Union() {}

func (*Message_Clipboard) isMessage_Union() {}

func (*Message_FileAction) isMessage_Union() {}

func (*Message_FileResponse) isMessage_Union() {}

func (*Message_Misc) isMessage_Union() {}

func (*Message_Cliprdr) isMessage_Union() {}

var File_model_protos_message_proto protoreflect.FileDescriptor

var file_model_protos_message_proto_rawDesc = []byte{
	0x0a, 0x1a, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x73, 0x2f, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x68, 0x62,
	0x62, 0x22, 0x3d, 0x0a, 0x03, 0x56, 0x50, 0x39, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x70, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x03, 0x70, 0x74, 0x73,
	0x22, 0x28, 0x0a, 0x04, 0x56, 0x50, 0x39, 0x73, 0x12, 0x20, 0x0a, 0x06, 0x66, 0x72, 0x61, 0x6d,
	0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x56,
	0x50, 0x39, 0x52, 0x06, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x73, 0x22, 0x21, 0x0a, 0x03, 0x52, 0x47,
	0x42, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x22, 0x39, 0x0a,
	0x03, 0x59, 0x55, 0x56, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x72, 0x69, 0x64, 0x65, 0x22, 0x72, 0x0a, 0x0a, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x76, 0x70, 0x39, 0x73, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x56, 0x50, 0x39, 0x73, 0x48,
	0x00, 0x52, 0x04, 0x76, 0x70, 0x39, 0x73, 0x12, 0x1c, 0x0a, 0x03, 0x72, 0x67, 0x62, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x52, 0x47, 0x42, 0x48, 0x00,
	0x52, 0x03, 0x72, 0x67, 0x62, 0x12, 0x1c, 0x0a, 0x03, 0x79, 0x75, 0x76, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x08, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x59, 0x55, 0x56, 0x48, 0x00, 0x52, 0x03,
	0x79, 0x75, 0x76, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x26, 0x0a, 0x04,
	0x49, 0x64, 0x50, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x70, 0x6b, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x02, 0x70, 0x6b, 0x22, 0x83, 0x01, 0x0a, 0x0b, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x01, 0x78, 0x12, 0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x06, 0x6f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x22, 0x35, 0x0a, 0x0b, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x73,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x6f, 0x72,
	0x74, 0x22, 0x41, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x10, 0x0a, 0x03, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x64, 0x69, 0x72, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x68, 0x69, 0x64, 0x64,
	0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x68, 0x6f, 0x77, 0x48, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x22, 0xc8, 0x02, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x13, 0x0a,
	0x05, 0x6d, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6d, 0x79,
	0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x6d, 0x79, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x6d, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52,
	0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f,
	0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x0c, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x12, 0x35, 0x0a, 0x0c, 0x70, 0x6f, 0x72, 0x74, 0x5f, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72,
	0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x48, 0x00, 0x52, 0x0b, 0x70, 0x6f, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x12, 0x2c, 0x0a, 0x12, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x5f, 0x61, 0x63, 0x6b, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x10, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x41, 0x63, 0x6b, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22,
	0x21, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65,
	0x78, 0x74, 0x22, 0x89, 0x02, 0x0a, 0x08, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68,
	0x6f, 0x73, 0x74, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x6c, 0x61, 0x74, 0x66,
	0x6f, 0x72, 0x6d, 0x12, 0x2c, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x44, 0x69, 0x73, 0x70,
	0x6c, 0x61, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x73, 0x12, 0x27, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x64, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x61,
	0x73, 0x5f, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x0a, 0x73, 0x61, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x76,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x22, 0x5e,
	0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x16, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00,
	0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x2c, 0x0a, 0x09, 0x70, 0x65, 0x65, 0x72, 0x5f,
	0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x62, 0x62,
	0x2e, 0x50, 0x65, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x08, 0x70, 0x65, 0x65,
	0x72, 0x49, 0x6e, 0x66, 0x6f, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x6b,
	0x0a, 0x0a, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6d, 0x61, 0x73, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x6d, 0x61, 0x73, 0x6b,
	0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x78, 0x12, 0x0c,
	0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x79, 0x12, 0x2d, 0x0a, 0x09,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0e, 0x32,
	0x0f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4b, 0x65, 0x79,
	0x52, 0x09, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x22, 0xe4, 0x01, 0x0a, 0x08,
	0x4b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x6f, 0x77, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x64, 0x6f, 0x77, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x70, 0x72, 0x65,
	0x73, 0x73, 0x12, 0x32, 0x0a, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x5f, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6f,
	0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x03, 0x63, 0x68, 0x72, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x03, 0x63, 0x68, 0x72, 0x12, 0x1a, 0x0a, 0x07, 0x75, 0x6e,
	0x69, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x48, 0x00, 0x52, 0x07, 0x75,
	0x6e, 0x69, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x03, 0x73, 0x65, 0x71, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x03, 0x73, 0x65, 0x71, 0x12, 0x2d, 0x0a, 0x09, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0e, 0x32, 0x0f, 0x2e,
	0x68, 0x62, 0x62, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4b, 0x65, 0x79, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x72, 0x73, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69,
	0x6f, 0x6e, 0x22, 0x8a, 0x01, 0x0a, 0x0a, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x74, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x04, 0x68, 0x6f, 0x74, 0x78, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f, 0x74, 0x79, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x04, 0x68, 0x6f, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x77, 0x69, 0x64,
	0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x12,
	0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72,
	0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x6f, 0x72, 0x73, 0x22,
	0x2c, 0x0a, 0x0e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x79, 0x22, 0x38, 0x0a,
	0x04, 0x48, 0x61, 0x73, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x41, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x70, 0x62,
	0x6f, 0x61, 0x72, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0c, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0xa3, 0x01, 0x0a, 0x09, 0x46,
	0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x0a, 0x65, 0x6e, 0x74, 0x72,
	0x79, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0d, 0x2e, 0x68,
	0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x65, 0x6e, 0x74,
	0x72, 0x79, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73,
	0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69,
	0x73, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x23, 0x0a, 0x0d, 0x6d,
	0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x6d, 0x6f, 0x64, 0x69, 0x66, 0x69, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x5d, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72,
	0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x28, 0x0a, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73,
	0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c,
	0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x07, 0x65, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x22,
	0x44, 0x0a, 0x07, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x25,
	0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x48,
	0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x0c, 0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c,
	0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63,
	0x6c, 0x75, 0x64, 0x65, 0x5f, 0x68, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e,
	0x22, 0xb1, 0x03, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x29, 0x0a, 0x08, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0c, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x52, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x48,
	0x00, 0x52, 0x07, 0x72, 0x65, 0x61, 0x64, 0x44, 0x69, 0x72, 0x12, 0x32, 0x0a, 0x04, 0x73, 0x65,
	0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x04, 0x73, 0x65, 0x6e, 0x64, 0x12, 0x3b,
	0x0a, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x48, 0x00, 0x52, 0x07, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x12, 0x2c, 0x0a, 0x06, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x33, 0x0a, 0x0a, 0x72, 0x65, 0x6d,
	0x6f, 0x76, 0x65, 0x5f, 0x64, 0x69, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69,
	0x72, 0x48, 0x00, 0x52, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69, 0x72, 0x12, 0x36,
	0x0a, 0x0b, 0x72, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65,
	0x6d, 0x6f, 0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x0a, 0x72, 0x65, 0x6d, 0x6f,
	0x76, 0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x30, 0x0a, 0x09, 0x61, 0x6c, 0x6c, 0x5f, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x62, 0x62, 0x2e,
	0x52, 0x65, 0x61, 0x64, 0x41, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x48, 0x00, 0x52, 0x08,
	0x61, 0x6c, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x31, 0x0a, 0x06, 0x63, 0x61, 0x6e, 0x63,
	0x65, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65,
	0x6c, 0x48, 0x00, 0x52, 0x06, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x07, 0x0a, 0x05, 0x75,
	0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x24, 0x0a, 0x12, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0xcc, 0x01, 0x0a, 0x0c, 0x46,
	0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x03, 0x64,
	0x69, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46,
	0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x79, 0x48, 0x00, 0x52, 0x03,
	0x64, 0x69, 0x72, 0x12, 0x2e, 0x0a, 0x05, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x48, 0x00, 0x52, 0x05, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x12, 0x2e, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x48, 0x00, 0x52, 0x05, 0x65, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x2b, 0x0a, 0x04, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x48, 0x00, 0x52, 0x04, 0x64, 0x6f, 0x6e, 0x65,
	0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x11, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19,
	0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a,
	0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x22, 0x54, 0x0a,
	0x11, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65,
	0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x66, 0x69, 0x6c, 0x65,
	0x4e, 0x75, 0x6d, 0x22, 0x64, 0x0a, 0x17, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x53, 0x65, 0x6e, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61,
	0x74, 0x68, 0x12, 0x25, 0x0a, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x5f, 0x68, 0x69,
	0x64, 0x64, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x48, 0x69, 0x64, 0x64, 0x65, 0x6e, 0x22, 0x3d, 0x0a, 0x10, 0x46, 0x69, 0x6c,
	0x65, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x44, 0x6f, 0x6e, 0x65, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x19, 0x0a,
	0x08, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x07, 0x66, 0x69, 0x6c, 0x65, 0x4e, 0x75, 0x6d, 0x22, 0x66, 0x0a, 0x1a, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x24, 0x0a, 0x05, 0x66, 0x69,
	0x6c, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x62, 0x62, 0x2e,
	0x46, 0x69, 0x6c, 0x65, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73,
	0x22, 0x51, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x44, 0x69,
	0x72, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73, 0x69,
	0x76, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x72, 0x65, 0x63, 0x75, 0x72, 0x73,
	0x69, 0x76, 0x65, 0x22, 0x4f, 0x0a, 0x0e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x6d, 0x6f, 0x76,
	0x65, 0x46, 0x69, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x19, 0x0a, 0x08, 0x66, 0x69, 0x6c,
	0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x07, 0x66, 0x69, 0x6c,
	0x65, 0x4e, 0x75, 0x6d, 0x22, 0x33, 0x0a, 0x0d, 0x46, 0x69, 0x6c, 0x65, 0x44, 0x69, 0x72, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x22, 0x2e, 0x0a, 0x13, 0x43, 0x6c, 0x69,
	0x70, 0x72, 0x64, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x22, 0x50, 0x0a, 0x0d, 0x43, 0x6c, 0x69,
	0x70, 0x72, 0x64, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x6e, 0x49, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x22, 0x60, 0x0a, 0x17, 0x43,
	0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12,
	0x2c, 0x0a, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x52, 0x07, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x73, 0x22, 0x57, 0x0a,
	0x1f, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x73, 0x67,
	0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x73,
	0x67, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x22, 0x69, 0x0a, 0x1e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64,
	0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49,
	0x64, 0x12, 0x2e, 0x0a, 0x13, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11,
	0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x49,
	0x64, 0x22, 0x78, 0x0a, 0x1f, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x53, 0x65, 0x72, 0x76,
	0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x6d, 0x73, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c, 0x52,
	0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0xca, 0x02, 0x0a, 0x1a,
	0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e,
	0x6e, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64,
	0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x6e, 0x64, 0x65, 0x78, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x64, 0x65, 0x78, 0x12,
	0x19, 0x0a, 0x08, 0x64, 0x77, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x64, 0x77, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x24, 0x0a, 0x0e, 0x6e, 0x5f,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x6c, 0x6f, 0x77, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0c, 0x6e, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x6f, 0x77,
	0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x5f, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x68,
	0x69, 0x67, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x6e, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x48, 0x69, 0x67, 0x68, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x62, 0x5f, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b,
	0x63, 0x62, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x12, 0x29, 0x0a, 0x11, 0x68,
	0x61, 0x76, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x69, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x76, 0x65, 0x43, 0x6c, 0x69, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x63, 0x6c, 0x69, 0x70, 0x5f, 0x64,
	0x61, 0x74, 0x61, 0x5f, 0x69, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6c,
	0x69, 0x70, 0x44, 0x61, 0x74, 0x61, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x1b, 0x43, 0x6c, 0x69,
	0x70, 0x72, 0x64, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x6e, 0x6e, 0x49,
	0x64, 0x12, 0x1b, 0x0a, 0x09, 0x6d, 0x73, 0x67, 0x5f, 0x66, 0x6c, 0x61, 0x67, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x6d, 0x73, 0x67, 0x46, 0x6c, 0x61, 0x67, 0x73, 0x12, 0x1b,
	0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x49, 0x64, 0x12, 0x25, 0x0a, 0x0e, 0x72,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x22, 0xc1, 0x04, 0x0a, 0x07, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x12, 0x30,
	0x0a, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e,
	0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x4d, 0x6f, 0x6e, 0x69, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x61, 0x64, 0x79, 0x48, 0x00, 0x52, 0x05, 0x72, 0x65, 0x61, 0x64, 0x79,
	0x12, 0x3f, 0x0a, 0x0b, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70,
	0x72, 0x64, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x58, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x24, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x53, 0x65, 0x72,
	0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x13, 0x66,
	0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43,
	0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x53, 0x65, 0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d,
	0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52,
	0x11, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x58, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x24, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x53, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x12, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x55, 0x0a, 0x15,
	0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x13,
	0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x58, 0x0a, 0x16, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x73, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64,
	0x72, 0x46, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x14, 0x66, 0x69, 0x6c, 0x65, 0x43, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x07, 0x0a,
	0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x73, 0x0a, 0x0d, 0x53, 0x77, 0x69, 0x74, 0x63, 0x68,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c,
	0x61, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x12, 0x0c, 0x0a, 0x01, 0x78, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x78, 0x12,
	0x0c, 0x0a, 0x01, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0xaa, 0x01, 0x0a, 0x0e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3e,
	0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x3e, 0x0a, 0x0a, 0x50, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x0c, 0x0a, 0x08, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x10, 0x00, 0x12, 0x0d, 0x0a, 0x09, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72,
	0x64, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x10, 0x03, 0x12, 0x08,
	0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x22, 0xa8, 0x05, 0x0a, 0x0d, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x36, 0x0a, 0x0d, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0e, 0x32, 0x11, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61,
	0x6c, 0x69, 0x74, 0x79, 0x52, 0x0c, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x51, 0x75, 0x61, 0x6c, 0x69,
	0x74, 0x79, 0x12, 0x52, 0x0a, 0x16, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x61, 0x66, 0x74, 0x65, 0x72,
	0x5f, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x65, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x13, 0x6c, 0x6f, 0x63, 0x6b, 0x41, 0x66, 0x74, 0x65, 0x72, 0x53, 0x65, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x64, 0x12, 0x4b, 0x0a, 0x12, 0x73, 0x68, 0x6f, 0x77, 0x5f, 0x72,
	0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x10, 0x73, 0x68, 0x6f, 0x77, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x12, 0x40, 0x0a, 0x0c, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x5f, 0x6d,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x62, 0x2e,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f,
	0x6f, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x3e, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x69,
	0x6e, 0x70, 0x75, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x62,
	0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42,
	0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x49, 0x6e, 0x70, 0x75, 0x74, 0x12, 0x30, 0x0a, 0x14, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x71, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x12, 0x63, 0x75, 0x73, 0x74, 0x6f, 0x6d, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x42, 0x0a, 0x0d, 0x64, 0x69, 0x73, 0x61, 0x62,
	0x6c, 0x65, 0x5f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d,
	0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x4a, 0x0a, 0x11, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x5f, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x10, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x43, 0x6c,
	0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x4f, 0x0a, 0x14, 0x65, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x2e, 0x42, 0x6f, 0x6f, 0x6c, 0x4f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x12, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x69, 0x6c, 0x65,
	0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x22, 0x29, 0x0a, 0x0a, 0x42, 0x6f, 0x6f, 0x6c,
	0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x53, 0x65, 0x74,
	0x10, 0x00, 0x12, 0x06, 0x0a, 0x02, 0x4e, 0x6f, 0x10, 0x01, 0x12, 0x07, 0x0a, 0x03, 0x59, 0x65,
	0x73, 0x10, 0x02, 0x22, 0x4c, 0x0a, 0x0e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a, 0x03, 0x6f, 0x70, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x52, 0x03, 0x6f, 0x70, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x22, 0x40, 0x0a, 0x09, 0x54, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x66, 0x72, 0x6f, 0x6d, 0x5f, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x66, 0x72, 0x6f, 0x6d, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x22, 0x5f, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79,
	0x12, 0x29, 0x0a, 0x10, 0x61, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x61, 0x73, 0x79, 0x6d,
	0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x73,
	0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x0e, 0x73, 0x79, 0x6d, 0x6d, 0x65, 0x74, 0x72, 0x69, 0x63, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x22, 0x1a, 0x0a, 0x08, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x4a, 0x0a, 0x0b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x12,
	0x1f, 0x0a, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x73, 0x22, 0x20, 0x0a, 0x0a,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xdd,
	0x03, 0x0a, 0x04, 0x4d, 0x69, 0x73, 0x63, 0x12, 0x35, 0x0a, 0x0c, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x68, 0x62, 0x62, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x0b, 0x63, 0x68, 0x61, 0x74, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x3b,
	0x0a, 0x0e, 0x73, 0x77, 0x69, 0x74, 0x63, 0x68, 0x5f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x53, 0x77, 0x69,
	0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52, 0x0d, 0x73, 0x77,
	0x69, 0x74, 0x63, 0x68, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x12, 0x3e, 0x0a, 0x0f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x48, 0x00, 0x52, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x2c, 0x0a, 0x06, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x48,
	0x00, 0x52, 0x06, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x35, 0x0a, 0x0c, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x5f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61,
	0x74, 0x48, 0x00, 0x52, 0x0b, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74,
	0x12, 0x23, 0x0a, 0x0c, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x0b, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x52,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x25, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68,
	0x5f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0c,
	0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x3e, 0x0a, 0x0f,
	0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4f, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x6f, 0x70,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a, 0x0e,
	0x76, 0x69, 0x64, 0x65, 0x6f, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x18, 0x0c,
	0x20, 0x01, 0x28, 0x08, 0x48, 0x00, 0x52, 0x0d, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f, 0x6e, 0x22, 0x80,
	0x07, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x2c, 0x0a, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x65, 0x64, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x68, 0x62, 0x62, 0x2e, 0x53, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x64, 0x48, 0x00, 0x52, 0x08,
	0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x49, 0x64, 0x12, 0x2f, 0x0a, 0x0a, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x5f, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68,
	0x62, 0x62, 0x2e, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x48, 0x00, 0x52, 0x09,
	0x70, 0x75, 0x62, 0x6c, 0x69, 0x63, 0x4b, 0x65, 0x79, 0x12, 0x2f, 0x0a, 0x0a, 0x74, 0x65, 0x73,
	0x74, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x68, 0x62, 0x62, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x48, 0x00, 0x52,
	0x09, 0x74, 0x65, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x32, 0x0a, 0x0b, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x38,
	0x0a, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x5f, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x48, 0x00, 0x52, 0x0c, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3b, 0x0a, 0x0e, 0x6c, 0x6f, 0x67, 0x69,
	0x6e, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52, 0x0d, 0x6c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a, 0x04, 0x68, 0x61, 0x73, 0x68, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x48, 0x61, 0x73, 0x68, 0x48, 0x00,
	0x52, 0x04, 0x68, 0x61, 0x73, 0x68, 0x12, 0x32, 0x0a, 0x0b, 0x6d, 0x6f, 0x75, 0x73, 0x65, 0x5f,
	0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x4d, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x0a,
	0x6d, 0x6f, 0x75, 0x73, 0x65, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x0b, 0x61, 0x75,
	0x64, 0x69, 0x6f, 0x5f, 0x66, 0x72, 0x61, 0x6d, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65,
	0x48, 0x00, 0x52, 0x0a, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x46, 0x72, 0x61, 0x6d, 0x65, 0x12, 0x32,
	0x0a, 0x0b, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x44, 0x61, 0x74, 0x61, 0x48, 0x00, 0x52, 0x0a, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x3e, 0x0a, 0x0f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x70, 0x6f, 0x73,
	0x69, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x00, 0x52, 0x0e, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x1d, 0x0a, 0x09, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x04, 0x48, 0x00, 0x52, 0x08, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x2c, 0x0a, 0x09, 0x6b, 0x65, 0x79, 0x5f, 0x65, 0x76, 0x65, 0x6e, 0x74, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x4b, 0x65, 0x79, 0x45, 0x76,
	0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x12,
	0x2e, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x48, 0x00, 0x52, 0x09, 0x63, 0x6c, 0x69, 0x70, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12,
	0x32, 0x0a, 0x0b, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0a, 0x66, 0x69, 0x6c, 0x65, 0x41, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x38, 0x0a, 0x0d, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x62, 0x62,
	0x2e, 0x46, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x48, 0x00, 0x52,
	0x0c, 0x66, 0x69, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1f, 0x0a,
	0x04, 0x6d, 0x69, 0x73, 0x63, 0x18, 0x13, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x68, 0x62,
	0x62, 0x2e, 0x4d, 0x69, 0x73, 0x63, 0x48, 0x00, 0x52, 0x04, 0x6d, 0x69, 0x73, 0x63, 0x12, 0x28,
	0x0a, 0x07, 0x63, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0c, 0x2e, 0x68, 0x62, 0x62, 0x2e, 0x43, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x48, 0x00, 0x52,
	0x07, 0x63, 0x6c, 0x69, 0x70, 0x72, 0x64, 0x72, 0x42, 0x07, 0x0a, 0x05, 0x75, 0x6e, 0x69, 0x6f,
	0x6e, 0x2a, 0x9b, 0x07, 0x0a, 0x0a, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x4b, 0x65, 0x79,
	0x12, 0x0b, 0x0a, 0x07, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x07, 0x0a,
	0x03, 0x41, 0x6c, 0x74, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x42, 0x61, 0x63, 0x6b, 0x73, 0x70,
	0x61, 0x63, 0x65, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08, 0x43, 0x61, 0x70, 0x73, 0x4c, 0x6f, 0x63,
	0x6b, 0x10, 0x03, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x6f, 0x6c, 0x10, 0x04,
	0x12, 0x0a, 0x0a, 0x06, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x10, 0x05, 0x12, 0x0d, 0x0a, 0x09,
	0x44, 0x6f, 0x77, 0x6e, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x45,
	0x6e, 0x64, 0x10, 0x07, 0x12, 0x0a, 0x0a, 0x06, 0x45, 0x73, 0x63, 0x61, 0x70, 0x65, 0x10, 0x08,
	0x12, 0x06, 0x0a, 0x02, 0x46, 0x31, 0x10, 0x09, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31, 0x30, 0x10,
	0x0a, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31, 0x31, 0x10, 0x0b, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x31,
	0x32, 0x10, 0x0c, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x32, 0x10, 0x0d, 0x12, 0x06, 0x0a, 0x02, 0x46,
	0x33, 0x10, 0x0e, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x34, 0x10, 0x0f, 0x12, 0x06, 0x0a, 0x02, 0x46,
	0x35, 0x10, 0x10, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x36, 0x10, 0x11, 0x12, 0x06, 0x0a, 0x02, 0x46,
	0x37, 0x10, 0x12, 0x12, 0x06, 0x0a, 0x02, 0x46, 0x38, 0x10, 0x13, 0x12, 0x06, 0x0a, 0x02, 0x46,
	0x39, 0x10, 0x14, 0x12, 0x08, 0x0a, 0x04, 0x48, 0x6f, 0x6d, 0x65, 0x10, 0x15, 0x12, 0x0d, 0x0a,
	0x09, 0x4c, 0x65, 0x66, 0x74, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x10, 0x16, 0x12, 0x08, 0x0a, 0x04,
	0x4d, 0x65, 0x74, 0x61, 0x10, 0x17, 0x12, 0x0a, 0x0a, 0x06, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x10, 0x18, 0x12, 0x0c, 0x0a, 0x08, 0x50, 0x61, 0x67, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x10, 0x19,
	0x12, 0x0a, 0x0a, 0x06, 0x50, 0x61, 0x67, 0x65, 0x55, 0x70, 0x10, 0x1a, 0x12, 0x0a, 0x0a, 0x06,
	0x52, 0x65, 0x74, 0x75, 0x72, 0x6e, 0x10, 0x1b, 0x12, 0x0e, 0x0a, 0x0a, 0x52, 0x69, 0x67, 0x68,
	0x74, 0x41, 0x72, 0x72, 0x6f, 0x77, 0x10, 0x1c, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x68, 0x69, 0x66,
	0x74, 0x10, 0x1d, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x70, 0x61, 0x63, 0x65, 0x10, 0x1e, 0x12, 0x07,
	0x0a, 0x03, 0x54, 0x61, 0x62, 0x10, 0x1f, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x70, 0x41, 0x72, 0x72,
	0x6f, 0x77, 0x10, 0x20, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x30, 0x10,
	0x21, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x31, 0x10, 0x22, 0x12, 0x0b,
	0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x32, 0x10, 0x23, 0x12, 0x0b, 0x0a, 0x07, 0x4e,
	0x75, 0x6d, 0x70, 0x61, 0x64, 0x33, 0x10, 0x24, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70,
	0x61, 0x64, 0x34, 0x10, 0x25, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x35,
	0x10, 0x26, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x36, 0x10, 0x27, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x37, 0x10, 0x28, 0x12, 0x0b, 0x0a, 0x07,
	0x4e, 0x75, 0x6d, 0x70, 0x61, 0x64, 0x38, 0x10, 0x29, 0x12, 0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d,
	0x70, 0x61, 0x64, 0x39, 0x10, 0x2a, 0x12, 0x0a, 0x0a, 0x06, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x10, 0x2b, 0x12, 0x09, 0x0a, 0x05, 0x43, 0x6c, 0x65, 0x61, 0x72, 0x10, 0x2c, 0x12, 0x08, 0x0a,
	0x04, 0x4d, 0x65, 0x6e, 0x75, 0x10, 0x2d, 0x12, 0x09, 0x0a, 0x05, 0x50, 0x61, 0x75, 0x73, 0x65,
	0x10, 0x2e, 0x12, 0x08, 0x0a, 0x04, 0x4b, 0x61, 0x6e, 0x61, 0x10, 0x2f, 0x12, 0x0a, 0x0a, 0x06,
	0x48, 0x61, 0x6e, 0x67, 0x75, 0x6c, 0x10, 0x30, 0x12, 0x09, 0x0a, 0x05, 0x4a, 0x75, 0x6e, 0x6a,
	0x61, 0x10, 0x31, 0x12, 0x09, 0x0a, 0x05, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x10, 0x32, 0x12, 0x09,
	0x0a, 0x05, 0x48, 0x61, 0x6e, 0x6a, 0x61, 0x10, 0x33, 0x12, 0x09, 0x0a, 0x05, 0x4b, 0x61, 0x6e,
	0x6a, 0x69, 0x10, 0x34, 0x12, 0x0b, 0x0a, 0x07, 0x43, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x10,
	0x35, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x10, 0x36, 0x12, 0x09, 0x0a,
	0x05, 0x50, 0x72, 0x69, 0x6e, 0x74, 0x10, 0x37, 0x12, 0x0b, 0x0a, 0x07, 0x45, 0x78, 0x65, 0x63,
	0x75, 0x74, 0x65, 0x10, 0x38, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x6e, 0x61, 0x70, 0x73, 0x68, 0x6f,
	0x74, 0x10, 0x39, 0x12, 0x0a, 0x0a, 0x06, 0x49, 0x6e, 0x73, 0x65, 0x72, 0x74, 0x10, 0x3a, 0x12,
	0x08, 0x0a, 0x04, 0x48, 0x65, 0x6c, 0x70, 0x10, 0x3b, 0x12, 0x09, 0x0a, 0x05, 0x53, 0x6c, 0x65,
	0x65, 0x70, 0x10, 0x3c, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x65, 0x70, 0x61, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x10, 0x3d, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x63, 0x72, 0x6f, 0x6c, 0x6c, 0x10, 0x3e, 0x12,
	0x0b, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x4c, 0x6f, 0x63, 0x6b, 0x10, 0x3f, 0x12, 0x08, 0x0a, 0x04,
	0x52, 0x57, 0x69, 0x6e, 0x10, 0x40, 0x12, 0x08, 0x0a, 0x04, 0x41, 0x70, 0x70, 0x73, 0x10, 0x41,
	0x12, 0x0c, 0x0a, 0x08, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x79, 0x10, 0x42, 0x12, 0x07,
	0x0a, 0x03, 0x41, 0x64, 0x64, 0x10, 0x43, 0x12, 0x0c, 0x0a, 0x08, 0x53, 0x75, 0x62, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x10, 0x44, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x65, 0x63, 0x69, 0x6d, 0x61, 0x6c,
	0x10, 0x45, 0x12, 0x0a, 0x0a, 0x06, 0x44, 0x69, 0x76, 0x69, 0x64, 0x65, 0x10, 0x46, 0x12, 0x0a,
	0x0a, 0x06, 0x45, 0x71, 0x75, 0x61, 0x6c, 0x73, 0x10, 0x47, 0x12, 0x0f, 0x0a, 0x0b, 0x4e, 0x75,
	0x6d, 0x70, 0x61, 0x64, 0x45, 0x6e, 0x74, 0x65, 0x72, 0x10, 0x48, 0x12, 0x0a, 0x0a, 0x06, 0x52,
	0x53, 0x68, 0x69, 0x66, 0x74, 0x10, 0x49, 0x12, 0x0c, 0x0a, 0x08, 0x52, 0x43, 0x6f, 0x6e, 0x74,
	0x72, 0x6f, 0x6c, 0x10, 0x4a, 0x12, 0x08, 0x0a, 0x04, 0x52, 0x41, 0x6c, 0x74, 0x10, 0x4b, 0x12,
	0x0e, 0x0a, 0x0a, 0x43, 0x74, 0x72, 0x6c, 0x41, 0x6c, 0x74, 0x44, 0x65, 0x6c, 0x10, 0x64, 0x12,
	0x0e, 0x0a, 0x0a, 0x4c, 0x6f, 0x63, 0x6b, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x10, 0x65, 0x2a,
	0x46, 0x0a, 0x08, 0x46, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x07, 0x0a, 0x03, 0x44,
	0x69, 0x72, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x44, 0x69, 0x72, 0x4c, 0x69, 0x6e, 0x6b, 0x10,
	0x02, 0x12, 0x0c, 0x0a, 0x08, 0x44, 0x69, 0x72, 0x44, 0x72, 0x69, 0x76, 0x65, 0x10, 0x03, 0x12,
	0x08, 0x0a, 0x04, 0x46, 0x69, 0x6c, 0x65, 0x10, 0x04, 0x12, 0x0c, 0x0a, 0x08, 0x46, 0x69, 0x6c,
	0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x10, 0x05, 0x2a, 0x3b, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x51, 0x75, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x12, 0x0a, 0x0a, 0x06, 0x4e, 0x6f, 0x74, 0x53, 0x65,
	0x74, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4c, 0x6f, 0x77, 0x10, 0x02, 0x12, 0x0c, 0x0a, 0x08,
	0x42, 0x61, 0x6c, 0x61, 0x6e, 0x63, 0x65, 0x64, 0x10, 0x03, 0x12, 0x08, 0x0a, 0x04, 0x42, 0x65,
	0x73, 0x74, 0x10, 0x04, 0x42, 0x10, 0x5a, 0x0e, 0x2e, 0x2e, 0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_model_protos_message_proto_rawDescOnce sync.Once
	file_model_protos_message_proto_rawDescData = file_model_protos_message_proto_rawDesc
)

func file_model_protos_message_proto_rawDescGZIP() []byte {
	file_model_protos_message_proto_rawDescOnce.Do(func() {
		file_model_protos_message_proto_rawDescData = protoimpl.X.CompressGZIP(file_model_protos_message_proto_rawDescData)
	})
	return file_model_protos_message_proto_rawDescData
}

var file_model_protos_message_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_model_protos_message_proto_msgTypes = make([]protoimpl.MessageInfo, 54)
var file_model_protos_message_proto_goTypes = []interface{}{
	(ControlKey)(0),                         // 0: hbb.ControlKey
	(FileType)(0),                           // 1: hbb.FileType
	(ImageQuality)(0),                       // 2: hbb.ImageQuality
	(PermissionInfo_Permission)(0),          // 3: hbb.PermissionInfo.Permission
	(OptionMessage_BoolOption)(0),           // 4: hbb.OptionMessage.BoolOption
	(*VP9)(nil),                             // 5: hbb.VP9
	(*VP9S)(nil),                            // 6: hbb.VP9s
	(*RGB)(nil),                             // 7: hbb.RGB
	(*YUV)(nil),                             // 8: hbb.YUV
	(*VideoFrame)(nil),                      // 9: hbb.VideoFrame
	(*IdPk)(nil),                            // 10: hbb.IdPk
	(*DisplayInfo)(nil),                     // 11: hbb.DisplayInfo
	(*PortForward)(nil),                     // 12: hbb.PortForward
	(*FileTransfer)(nil),                    // 13: hbb.FileTransfer
	(*LoginRequest)(nil),                    // 14: hbb.LoginRequest
	(*ChatMessage)(nil),                     // 15: hbb.ChatMessage
	(*PeerInfo)(nil),                        // 16: hbb.PeerInfo
	(*LoginResponse)(nil),                   // 17: hbb.LoginResponse
	(*MouseEvent)(nil),                      // 18: hbb.MouseEvent
	(*KeyEvent)(nil),                        // 19: hbb.KeyEvent
	(*CursorData)(nil),                      // 20: hbb.CursorData
	(*CursorPosition)(nil),                  // 21: hbb.CursorPosition
	(*Hash)(nil),                            // 22: hbb.Hash
	(*Clipboard)(nil),                       // 23: hbb.Clipboard
	(*FileEntry)(nil),                       // 24: hbb.FileEntry
	(*FileDirectory)(nil),                   // 25: hbb.FileDirectory
	(*ReadDir)(nil),                         // 26: hbb.ReadDir
	(*ReadAllFiles)(nil),                    // 27: hbb.ReadAllFiles
	(*FileAction)(nil),                      // 28: hbb.FileAction
	(*FileTransferCancel)(nil),              // 29: hbb.FileTransferCancel
	(*FileResponse)(nil),                    // 30: hbb.FileResponse
	(*FileTransferBlock)(nil),               // 31: hbb.FileTransferBlock
	(*FileTransferError)(nil),               // 32: hbb.FileTransferError
	(*FileTransferSendRequest)(nil),         // 33: hbb.FileTransferSendRequest
	(*FileTransferDone)(nil),                // 34: hbb.FileTransferDone
	(*FileTransferReceiveRequest)(nil),      // 35: hbb.FileTransferReceiveRequest
	(*FileRemoveDir)(nil),                   // 36: hbb.FileRemoveDir
	(*FileRemoveFile)(nil),                  // 37: hbb.FileRemoveFile
	(*FileDirCreate)(nil),                   // 38: hbb.FileDirCreate
	(*CliprdrMonitorReady)(nil),             // 39: hbb.CliprdrMonitorReady
	(*CliprdrFormat)(nil),                   // 40: hbb.CliprdrFormat
	(*CliprdrServerFormatList)(nil),         // 41: hbb.CliprdrServerFormatList
	(*CliprdrServerFormatListResponse)(nil), // 42: hbb.CliprdrServerFormatListResponse
	(*CliprdrServerFormatDataRequest)(nil),  // 43: hbb.CliprdrServerFormatDataRequest
	(*CliprdrServerFormatDataResponse)(nil), // 44: hbb.CliprdrServerFormatDataResponse
	(*CliprdrFileContentsRequest)(nil),      // 45: hbb.CliprdrFileContentsRequest
	(*CliprdrFileContentsResponse)(nil),     // 46: hbb.CliprdrFileContentsResponse
	(*Cliprdr)(nil),                         // 47: hbb.Cliprdr
	(*SwitchDisplay)(nil),                   // 48: hbb.SwitchDisplay
	(*PermissionInfo)(nil),                  // 49: hbb.PermissionInfo
	(*OptionMessage)(nil),                   // 50: hbb.OptionMessage
	(*OptionResponse)(nil),                  // 51: hbb.OptionResponse
	(*TestDelay)(nil),                       // 52: hbb.TestDelay
	(*PublicKey)(nil),                       // 53: hbb.PublicKey
	(*SignedId)(nil),                        // 54: hbb.SignedId
	(*AudioFormat)(nil),                     // 55: hbb.AudioFormat
	(*AudioFrame)(nil),                      // 56: hbb.AudioFrame
	(*Misc)(nil),                            // 57: hbb.Misc
	(*Message)(nil),                         // 58: hbb.Message
}
var file_model_protos_message_proto_depIdxs = []int32{
	5,  // 0: hbb.VP9s.frames:type_name -> hbb.VP9
	6,  // 1: hbb.VideoFrame.vp9s:type_name -> hbb.VP9s
	7,  // 2: hbb.VideoFrame.rgb:type_name -> hbb.RGB
	8,  // 3: hbb.VideoFrame.yuv:type_name -> hbb.YUV
	50, // 4: hbb.LoginRequest.option:type_name -> hbb.OptionMessage
	13, // 5: hbb.LoginRequest.file_transfer:type_name -> hbb.FileTransfer
	12, // 6: hbb.LoginRequest.port_forward:type_name -> hbb.PortForward
	11, // 7: hbb.PeerInfo.displays:type_name -> hbb.DisplayInfo
	16, // 8: hbb.LoginResponse.peer_info:type_name -> hbb.PeerInfo
	0,  // 9: hbb.MouseEvent.modifiers:type_name -> hbb.ControlKey
	0,  // 10: hbb.KeyEvent.control_key:type_name -> hbb.ControlKey
	0,  // 11: hbb.KeyEvent.modifiers:type_name -> hbb.ControlKey
	1,  // 12: hbb.FileEntry.entry_type:type_name -> hbb.FileType
	24, // 13: hbb.FileDirectory.entries:type_name -> hbb.FileEntry
	26, // 14: hbb.FileAction.read_dir:type_name -> hbb.ReadDir
	33, // 15: hbb.FileAction.send:type_name -> hbb.FileTransferSendRequest
	35, // 16: hbb.FileAction.receive:type_name -> hbb.FileTransferReceiveRequest
	38, // 17: hbb.FileAction.create:type_name -> hbb.FileDirCreate
	36, // 18: hbb.FileAction.remove_dir:type_name -> hbb.FileRemoveDir
	37, // 19: hbb.FileAction.remove_file:type_name -> hbb.FileRemoveFile
	27, // 20: hbb.FileAction.all_files:type_name -> hbb.ReadAllFiles
	29, // 21: hbb.FileAction.cancel:type_name -> hbb.FileTransferCancel
	25, // 22: hbb.FileResponse.dir:type_name -> hbb.FileDirectory
	31, // 23: hbb.FileResponse.block:type_name -> hbb.FileTransferBlock
	32, // 24: hbb.FileResponse.error:type_name -> hbb.FileTransferError
	34, // 25: hbb.FileResponse.done:type_name -> hbb.FileTransferDone
	24, // 26: hbb.FileTransferReceiveRequest.files:type_name -> hbb.FileEntry
	40, // 27: hbb.CliprdrServerFormatList.formats:type_name -> hbb.CliprdrFormat
	39, // 28: hbb.Cliprdr.ready:type_name -> hbb.CliprdrMonitorReady
	41, // 29: hbb.Cliprdr.format_list:type_name -> hbb.CliprdrServerFormatList
	42, // 30: hbb.Cliprdr.format_list_response:type_name -> hbb.CliprdrServerFormatListResponse
	43, // 31: hbb.Cliprdr.format_data_request:type_name -> hbb.CliprdrServerFormatDataRequest
	44, // 32: hbb.Cliprdr.format_data_response:type_name -> hbb.CliprdrServerFormatDataResponse
	45, // 33: hbb.Cliprdr.file_contents_request:type_name -> hbb.CliprdrFileContentsRequest
	46, // 34: hbb.Cliprdr.file_contents_response:type_name -> hbb.CliprdrFileContentsResponse
	3,  // 35: hbb.PermissionInfo.permission:type_name -> hbb.PermissionInfo.Permission
	2,  // 36: hbb.OptionMessage.image_quality:type_name -> hbb.ImageQuality
	4,  // 37: hbb.OptionMessage.lock_after_session_end:type_name -> hbb.OptionMessage.BoolOption
	4,  // 38: hbb.OptionMessage.show_remote_cursor:type_name -> hbb.OptionMessage.BoolOption
	4,  // 39: hbb.OptionMessage.privacy_mode:type_name -> hbb.OptionMessage.BoolOption
	4,  // 40: hbb.OptionMessage.block_input:type_name -> hbb.OptionMessage.BoolOption
	4,  // 41: hbb.OptionMessage.disable_audio:type_name -> hbb.OptionMessage.BoolOption
	4,  // 42: hbb.OptionMessage.disable_clipboard:type_name -> hbb.OptionMessage.BoolOption
	4,  // 43: hbb.OptionMessage.enable_file_transfer:type_name -> hbb.OptionMessage.BoolOption
	50, // 44: hbb.OptionResponse.opt:type_name -> hbb.OptionMessage
	15, // 45: hbb.Misc.chat_message:type_name -> hbb.ChatMessage
	48, // 46: hbb.Misc.switch_display:type_name -> hbb.SwitchDisplay
	49, // 47: hbb.Misc.permission_info:type_name -> hbb.PermissionInfo
	50, // 48: hbb.Misc.option:type_name -> hbb.OptionMessage
	55, // 49: hbb.Misc.audio_format:type_name -> hbb.AudioFormat
	51, // 50: hbb.Misc.option_response:type_name -> hbb.OptionResponse
	54, // 51: hbb.Message.signed_id:type_name -> hbb.SignedId
	53, // 52: hbb.Message.public_key:type_name -> hbb.PublicKey
	52, // 53: hbb.Message.test_delay:type_name -> hbb.TestDelay
	9,  // 54: hbb.Message.video_frame:type_name -> hbb.VideoFrame
	14, // 55: hbb.Message.login_request:type_name -> hbb.LoginRequest
	17, // 56: hbb.Message.login_response:type_name -> hbb.LoginResponse
	22, // 57: hbb.Message.hash:type_name -> hbb.Hash
	18, // 58: hbb.Message.mouse_event:type_name -> hbb.MouseEvent
	56, // 59: hbb.Message.audio_frame:type_name -> hbb.AudioFrame
	20, // 60: hbb.Message.cursor_data:type_name -> hbb.CursorData
	21, // 61: hbb.Message.cursor_position:type_name -> hbb.CursorPosition
	19, // 62: hbb.Message.key_event:type_name -> hbb.KeyEvent
	23, // 63: hbb.Message.clipboard:type_name -> hbb.Clipboard
	28, // 64: hbb.Message.file_action:type_name -> hbb.FileAction
	30, // 65: hbb.Message.file_response:type_name -> hbb.FileResponse
	57, // 66: hbb.Message.misc:type_name -> hbb.Misc
	47, // 67: hbb.Message.cliprdr:type_name -> hbb.Cliprdr
	68, // [68:68] is the sub-list for method output_type
	68, // [68:68] is the sub-list for method input_type
	68, // [68:68] is the sub-list for extension type_name
	68, // [68:68] is the sub-list for extension extendee
	0,  // [0:68] is the sub-list for field type_name
}

func init() { file_model_protos_message_proto_init() }
func file_model_protos_message_proto_init() {
	if File_model_protos_message_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_model_protos_message_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VP9); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VP9S); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RGB); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*YUV); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*IdPk); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisplayInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortForward); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransfer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PeerInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MouseEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*KeyEvent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CursorPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Hash); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Clipboard); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDirectory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ReadAllFiles); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileAction); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferCancel); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferBlock); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferSendRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferDone); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileTransferReceiveRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRemoveDir); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileRemoveFile); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileDirCreate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrMonitorReady); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrServerFormatList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrServerFormatListResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrServerFormatDataRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrServerFormatDataResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrFileContentsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CliprdrFileContentsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Cliprdr); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SwitchDisplay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PermissionInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionMessage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*OptionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestDelay); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublicKey); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SignedId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioFormat); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioFrame); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Misc); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_model_protos_message_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Message); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_model_protos_message_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*VideoFrame_Vp9S)(nil),
		(*VideoFrame_Rgb)(nil),
		(*VideoFrame_Yuv)(nil),
	}
	file_model_protos_message_proto_msgTypes[9].OneofWrappers = []interface{}{
		(*LoginRequest_FileTransfer)(nil),
		(*LoginRequest_PortForward)(nil),
	}
	file_model_protos_message_proto_msgTypes[12].OneofWrappers = []interface{}{
		(*LoginResponse_Error)(nil),
		(*LoginResponse_PeerInfo)(nil),
	}
	file_model_protos_message_proto_msgTypes[14].OneofWrappers = []interface{}{
		(*KeyEvent_ControlKey)(nil),
		(*KeyEvent_Chr)(nil),
		(*KeyEvent_Unicode)(nil),
		(*KeyEvent_Seq)(nil),
	}
	file_model_protos_message_proto_msgTypes[23].OneofWrappers = []interface{}{
		(*FileAction_ReadDir)(nil),
		(*FileAction_Send)(nil),
		(*FileAction_Receive)(nil),
		(*FileAction_Create)(nil),
		(*FileAction_RemoveDir)(nil),
		(*FileAction_RemoveFile)(nil),
		(*FileAction_AllFiles)(nil),
		(*FileAction_Cancel)(nil),
	}
	file_model_protos_message_proto_msgTypes[25].OneofWrappers = []interface{}{
		(*FileResponse_Dir)(nil),
		(*FileResponse_Block)(nil),
		(*FileResponse_Error)(nil),
		(*FileResponse_Done)(nil),
	}
	file_model_protos_message_proto_msgTypes[42].OneofWrappers = []interface{}{
		(*Cliprdr_Ready)(nil),
		(*Cliprdr_FormatList)(nil),
		(*Cliprdr_FormatListResponse)(nil),
		(*Cliprdr_FormatDataRequest)(nil),
		(*Cliprdr_FormatDataResponse)(nil),
		(*Cliprdr_FileContentsRequest)(nil),
		(*Cliprdr_FileContentsResponse)(nil),
	}
	file_model_protos_message_proto_msgTypes[52].OneofWrappers = []interface{}{
		(*Misc_ChatMessage)(nil),
		(*Misc_SwitchDisplay)(nil),
		(*Misc_PermissionInfo)(nil),
		(*Misc_Option)(nil),
		(*Misc_AudioFormat)(nil),
		(*Misc_CloseReason)(nil),
		(*Misc_RefreshVideo)(nil),
		(*Misc_OptionResponse)(nil),
		(*Misc_VideoReceived)(nil),
	}
	file_model_protos_message_proto_msgTypes[53].OneofWrappers = []interface{}{
		(*Message_SignedId)(nil),
		(*Message_PublicKey)(nil),
		(*Message_TestDelay)(nil),
		(*Message_VideoFrame)(nil),
		(*Message_LoginRequest)(nil),
		(*Message_LoginResponse)(nil),
		(*Message_Hash)(nil),
		(*Message_MouseEvent)(nil),
		(*Message_AudioFrame)(nil),
		(*Message_CursorData)(nil),
		(*Message_CursorPosition)(nil),
		(*Message_CursorId)(nil),
		(*Message_KeyEvent)(nil),
		(*Message_Clipboard)(nil),
		(*Message_FileAction)(nil),
		(*Message_FileResponse)(nil),
		(*Message_Misc)(nil),
		(*Message_Cliprdr)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_model_protos_message_proto_rawDesc,
			NumEnums:      5,
			NumMessages:   54,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_model_protos_message_proto_goTypes,
		DependencyIndexes: file_model_protos_message_proto_depIdxs,
		EnumInfos:         file_model_protos_message_proto_enumTypes,
		MessageInfos:      file_model_protos_message_proto_msgTypes,
	}.Build()
	File_model_protos_message_proto = out.File
	file_model_protos_message_proto_rawDesc = nil
	file_model_protos_message_proto_goTypes = nil
	file_model_protos_message_proto_depIdxs = nil
}
